
stm32f407-drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001fa8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000011c  08002158  08002158  00012158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002274  08002274  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08002274  08002274  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002274  08002274  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002274  08002274  00012274  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002278  08002278  00012278  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  0800227c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000d8  20000070  080022ec  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000148  080022ec  00020148  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000199a  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000484  00000000  00000000  00021a3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00021ec0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022000  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000027a8  00000000  00000000  00022108  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012b7  00000000  00000000  000248b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000a8d3  00000000  00000000  00025b67  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0003043a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f3c  00000000  00000000  000304b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000070 	.word	0x20000070
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08002140 	.word	0x08002140

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000074 	.word	0x20000074
 80001ec:	08002140 	.word	0x08002140

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <delay>:
{
	LED_PIN	= 9
};

void delay(void)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000 / 2; i++);
 80002a6:	2300      	movs	r3, #0
 80002a8:	607b      	str	r3, [r7, #4]
 80002aa:	e002      	b.n	80002b2 <delay+0x12>
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	3301      	adds	r3, #1
 80002b0:	607b      	str	r3, [r7, #4]
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a04      	ldr	r2, [pc, #16]	; (80002c8 <delay+0x28>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d9f8      	bls.n	80002ac <delay+0xc>
}
 80002ba:	bf00      	nop
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c4:	4770      	bx	lr
 80002c6:	bf00      	nop
 80002c8:	0003d08f 	.word	0x0003d08f

080002cc <SPI2_GPIOInit>:

void SPI2_GPIOInit(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b084      	sub	sp, #16
 80002d0:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 80002d2:	4b14      	ldr	r3, [pc, #80]	; (8000324 <SPI2_GPIOInit+0x58>)
 80002d4:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 80002d6:	2302      	movs	r3, #2
 80002d8:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 80002da:	2305      	movs	r3, #5
 80002dc:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80002de:	2300      	movs	r3, #0
 80002e0:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 80002e2:	2301      	movs	r3, #1
 80002e4:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80002e6:	2302      	movs	r3, #2
 80002e8:	72bb      	strb	r3, [r7, #10]

	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 80002ea:	230c      	movs	r3, #12
 80002ec:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 80002ee:	1d3b      	adds	r3, r7, #4
 80002f0:	4618      	mov	r0, r3
 80002f2:	f000 f9d5 	bl	80006a0 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 80002f6:	230d      	movs	r3, #13
 80002f8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 80002fa:	1d3b      	adds	r3, r7, #4
 80002fc:	4618      	mov	r0, r3
 80002fe:	f000 f9cf 	bl	80006a0 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
 8000302:	230e      	movs	r3, #14
 8000304:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000306:	1d3b      	adds	r3, r7, #4
 8000308:	4618      	mov	r0, r3
 800030a:	f000 f9c9 	bl	80006a0 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_15;
 800030e:	230f      	movs	r3, #15
 8000310:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000312:	1d3b      	adds	r3, r7, #4
 8000314:	4618      	mov	r0, r3
 8000316:	f000 f9c3 	bl	80006a0 <GPIO_Init>
}
 800031a:	bf00      	nop
 800031c:	3710      	adds	r7, #16
 800031e:	46bd      	mov	sp, r7
 8000320:	bd80      	pop	{r7, pc}
 8000322:	bf00      	nop
 8000324:	40020400 	.word	0x40020400

08000328 <SPI2_Init>:

void SPI2_Init(void)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b084      	sub	sp, #16
 800032c:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2Handle;

	SPI2Handle.pSPIx = SPI2;
 800032e:	4b0c      	ldr	r3, [pc, #48]	; (8000360 <SPI2_Init+0x38>)
 8000330:	607b      	str	r3, [r7, #4]
	SPI2Handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000332:	2301      	movs	r3, #1
 8000334:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPIConfig.SPI_DevideMode = SPI_DEVICE_MODE_MASTER;
 8000336:	2301      	movs	r3, #1
 8000338:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV8;
 800033a:	2302      	movs	r3, #2
 800033c:	72bb      	strb	r3, [r7, #10]
	SPI2Handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 800033e:	2300      	movs	r3, #0
 8000340:	72fb      	strb	r3, [r7, #11]
	SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 8000342:	2300      	movs	r3, #0
 8000344:	733b      	strb	r3, [r7, #12]
	SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000346:	2300      	movs	r3, #0
 8000348:	737b      	strb	r3, [r7, #13]
	SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_DI;
 800034a:	2300      	movs	r3, #0
 800034c:	73bb      	strb	r3, [r7, #14]

	SPI_Init(&SPI2Handle);
 800034e:	1d3b      	adds	r3, r7, #4
 8000350:	4618      	mov	r0, r3
 8000352:	f000 fb99 	bl	8000a88 <SPI_Init>
}
 8000356:	bf00      	nop
 8000358:	3710      	adds	r7, #16
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}
 800035e:	bf00      	nop
 8000360:	40003800 	.word	0x40003800

08000364 <GPIO_ButtonInit>:

void GPIO_ButtonInit(void)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	b084      	sub	sp, #16
 8000368:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOBtn;

	GPIOBtn.pGPIOx = GPIOA;
 800036a:	4b09      	ldr	r3, [pc, #36]	; (8000390 <GPIO_ButtonInit+0x2c>)
 800036c:	607b      	str	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 800036e:	2300      	movs	r3, #0
 8000370:	723b      	strb	r3, [r7, #8]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000372:	2300      	movs	r3, #0
 8000374:	727b      	strb	r3, [r7, #9]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000376:	2302      	movs	r3, #2
 8000378:	72bb      	strb	r3, [r7, #10]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800037a:	2300      	movs	r3, #0
 800037c:	72fb      	strb	r3, [r7, #11]

	GPIO_Init(&GPIOBtn);
 800037e:	1d3b      	adds	r3, r7, #4
 8000380:	4618      	mov	r0, r3
 8000382:	f000 f98d 	bl	80006a0 <GPIO_Init>
}
 8000386:	bf00      	nop
 8000388:	3710      	adds	r7, #16
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	40020000 	.word	0x40020000

08000394 <SPI_VerifyResponse>:

uint8_t SPI_VerifyResponse(uint8_t ackByte)
{
 8000394:	b480      	push	{r7}
 8000396:	b083      	sub	sp, #12
 8000398:	af00      	add	r7, sp, #0
 800039a:	4603      	mov	r3, r0
 800039c:	71fb      	strb	r3, [r7, #7]
	if(ackByte == 0xF5)
 800039e:	79fb      	ldrb	r3, [r7, #7]
 80003a0:	2bf5      	cmp	r3, #245	; 0xf5
 80003a2:	d101      	bne.n	80003a8 <SPI_VerifyResponse+0x14>
	{
		return 1;
 80003a4:	2301      	movs	r3, #1
 80003a6:	e000      	b.n	80003aa <SPI_VerifyResponse+0x16>
	}
	else
	{
		return 0;
 80003a8:	2300      	movs	r3, #0
	}
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr
	...

080003b8 <main>:


int main(void)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b084      	sub	sp, #16
 80003bc:	af00      	add	r7, sp, #0
	uint8_t dummyWrite = 0xFF;
 80003be:	23ff      	movs	r3, #255	; 0xff
 80003c0:	73fb      	strb	r3, [r7, #15]
	uint8_t dummyRead;

	initialise_monitor_handles();
 80003c2:	f001 fe3d 	bl	8002040 <initialise_monitor_handles>

	printf("Application is running\n");
 80003c6:	4858      	ldr	r0, [pc, #352]	; (8000528 <main+0x170>)
 80003c8:	f000 fd14 	bl	8000df4 <puts>

	GPIO_ButtonInit();
 80003cc:	f7ff ffca 	bl	8000364 <GPIO_ButtonInit>

	SPI2_GPIOInit();
 80003d0:	f7ff ff7c 	bl	80002cc <SPI2_GPIOInit>
	SPI2_Init();
 80003d4:	f7ff ffa8 	bl	8000328 <SPI2_Init>

	printf("SPI init done\n");
 80003d8:	4854      	ldr	r0, [pc, #336]	; (800052c <main+0x174>)
 80003da:	f000 fd0b 	bl	8000df4 <puts>

	SPI_SSOEConfig(SPI2, ENABLE);
 80003de:	2101      	movs	r1, #1
 80003e0:	4853      	ldr	r0, [pc, #332]	; (8000530 <main+0x178>)
 80003e2:	f000 fc49 	bl	8000c78 <SPI_SSOEConfig>

	while(1)
	{
		while(!GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0));
 80003e6:	bf00      	nop
 80003e8:	2100      	movs	r1, #0
 80003ea:	4852      	ldr	r0, [pc, #328]	; (8000534 <main+0x17c>)
 80003ec:	f000 fafe 	bl	80009ec <GPIO_ReadFromInputPin>
 80003f0:	4603      	mov	r3, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d0f8      	beq.n	80003e8 <main+0x30>
		delay();
 80003f6:	f7ff ff53 	bl	80002a0 <delay>
		SPI_PeripheralControl(SPI2, ENABLE);
 80003fa:	2101      	movs	r1, #1
 80003fc:	484c      	ldr	r0, [pc, #304]	; (8000530 <main+0x178>)
 80003fe:	f000 fc1e 	bl	8000c3e <SPI_PeripheralControl>

		// 1. CMD_LED_CTRL <pin no> <value>
		uint8_t commandCode = COMMAND_LED_CTRL;
 8000402:	2350      	movs	r3, #80	; 0x50
 8000404:	737b      	strb	r3, [r7, #13]
		uint8_t ackByte;
		uint8_t args[2];

		SPI_SendData(SPI2, &commandCode, 1);
 8000406:	f107 030d 	add.w	r3, r7, #13
 800040a:	2201      	movs	r2, #1
 800040c:	4619      	mov	r1, r3
 800040e:	4848      	ldr	r0, [pc, #288]	; (8000530 <main+0x178>)
 8000410:	f000 fba9 	bl	8000b66 <SPI_SendData>
		SPI_ReceiveData(SPI2, &dummyRead, 1);
 8000414:	f107 030e 	add.w	r3, r7, #14
 8000418:	2201      	movs	r2, #1
 800041a:	4619      	mov	r1, r3
 800041c:	4844      	ldr	r0, [pc, #272]	; (8000530 <main+0x178>)
 800041e:	f000 fbd8 	bl	8000bd2 <SPI_ReceiveData>
		SPI_SendData(SPI2, &dummyWrite, 1);
 8000422:	f107 030f 	add.w	r3, r7, #15
 8000426:	2201      	movs	r2, #1
 8000428:	4619      	mov	r1, r3
 800042a:	4841      	ldr	r0, [pc, #260]	; (8000530 <main+0x178>)
 800042c:	f000 fb9b 	bl	8000b66 <SPI_SendData>
		SPI_ReceiveData(SPI2, &ackByte, 1);
 8000430:	f107 030c 	add.w	r3, r7, #12
 8000434:	2201      	movs	r2, #1
 8000436:	4619      	mov	r1, r3
 8000438:	483d      	ldr	r0, [pc, #244]	; (8000530 <main+0x178>)
 800043a:	f000 fbca 	bl	8000bd2 <SPI_ReceiveData>

		if(SPI_VerifyResponse(ackByte))
 800043e:	7b3b      	ldrb	r3, [r7, #12]
 8000440:	4618      	mov	r0, r3
 8000442:	f7ff ffa7 	bl	8000394 <SPI_VerifyResponse>
 8000446:	4603      	mov	r3, r0
 8000448:	2b00      	cmp	r3, #0
 800044a:	d00d      	beq.n	8000468 <main+0xb0>
		{
			args[0] = LED_PIN;
 800044c:	2309      	movs	r3, #9
 800044e:	723b      	strb	r3, [r7, #8]
			args[1] = LED_ON;
 8000450:	2301      	movs	r3, #1
 8000452:	727b      	strb	r3, [r7, #9]
			SPI_SendData(SPI2, args, 2);
 8000454:	f107 0308 	add.w	r3, r7, #8
 8000458:	2202      	movs	r2, #2
 800045a:	4619      	mov	r1, r3
 800045c:	4834      	ldr	r0, [pc, #208]	; (8000530 <main+0x178>)
 800045e:	f000 fb82 	bl	8000b66 <SPI_SendData>
			printf("COMMAND_LED_CTRL executed");
 8000462:	4835      	ldr	r0, [pc, #212]	; (8000538 <main+0x180>)
 8000464:	f000 fc52 	bl	8000d0c <iprintf>
		}

		// 2. CMD_SENSOR_READ <analog pin number>
		while(!GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_0));
 8000468:	bf00      	nop
 800046a:	2100      	movs	r1, #0
 800046c:	4831      	ldr	r0, [pc, #196]	; (8000534 <main+0x17c>)
 800046e:	f000 fabd 	bl	80009ec <GPIO_ReadFromInputPin>
 8000472:	4603      	mov	r3, r0
 8000474:	2b00      	cmp	r3, #0
 8000476:	d0f8      	beq.n	800046a <main+0xb2>
		delay();
 8000478:	f7ff ff12 	bl	80002a0 <delay>

		commandCode = COMMAND_SENSOR_READ;
 800047c:	2351      	movs	r3, #81	; 0x51
 800047e:	737b      	strb	r3, [r7, #13]

		SPI_SendData(SPI2, &commandCode, 1);
 8000480:	f107 030d 	add.w	r3, r7, #13
 8000484:	2201      	movs	r2, #1
 8000486:	4619      	mov	r1, r3
 8000488:	4829      	ldr	r0, [pc, #164]	; (8000530 <main+0x178>)
 800048a:	f000 fb6c 	bl	8000b66 <SPI_SendData>
		SPI_ReceiveData(SPI2, &dummyRead, 1);
 800048e:	f107 030e 	add.w	r3, r7, #14
 8000492:	2201      	movs	r2, #1
 8000494:	4619      	mov	r1, r3
 8000496:	4826      	ldr	r0, [pc, #152]	; (8000530 <main+0x178>)
 8000498:	f000 fb9b 	bl	8000bd2 <SPI_ReceiveData>
		SPI_SendData(SPI2, &dummyWrite, 1);
 800049c:	f107 030f 	add.w	r3, r7, #15
 80004a0:	2201      	movs	r2, #1
 80004a2:	4619      	mov	r1, r3
 80004a4:	4822      	ldr	r0, [pc, #136]	; (8000530 <main+0x178>)
 80004a6:	f000 fb5e 	bl	8000b66 <SPI_SendData>
		SPI_ReceiveData(SPI2, &ackByte, 1);
 80004aa:	f107 030c 	add.w	r3, r7, #12
 80004ae:	2201      	movs	r2, #1
 80004b0:	4619      	mov	r1, r3
 80004b2:	481f      	ldr	r0, [pc, #124]	; (8000530 <main+0x178>)
 80004b4:	f000 fb8d 	bl	8000bd2 <SPI_ReceiveData>

		if(SPI_VerifyResponse(ackByte))
 80004b8:	7b3b      	ldrb	r3, [r7, #12]
 80004ba:	4618      	mov	r0, r3
 80004bc:	f7ff ff6a 	bl	8000394 <SPI_VerifyResponse>
 80004c0:	4603      	mov	r3, r0
 80004c2:	2b00      	cmp	r3, #0
 80004c4:	d023      	beq.n	800050e <main+0x156>
		{
			args[0] = ANALOG_PIN0;
 80004c6:	2300      	movs	r3, #0
 80004c8:	723b      	strb	r3, [r7, #8]
			SPI_SendData(SPI2, args, 1);
 80004ca:	f107 0308 	add.w	r3, r7, #8
 80004ce:	2201      	movs	r2, #1
 80004d0:	4619      	mov	r1, r3
 80004d2:	4817      	ldr	r0, [pc, #92]	; (8000530 <main+0x178>)
 80004d4:	f000 fb47 	bl	8000b66 <SPI_SendData>

			SPI_ReceiveData(SPI2, &dummyRead, 1);
 80004d8:	f107 030e 	add.w	r3, r7, #14
 80004dc:	2201      	movs	r2, #1
 80004de:	4619      	mov	r1, r3
 80004e0:	4813      	ldr	r0, [pc, #76]	; (8000530 <main+0x178>)
 80004e2:	f000 fb76 	bl	8000bd2 <SPI_ReceiveData>
			delay();
 80004e6:	f7ff fedb 	bl	80002a0 <delay>
			SPI_SendData(SPI2, &dummyWrite, 1);
 80004ea:	f107 030f 	add.w	r3, r7, #15
 80004ee:	2201      	movs	r2, #1
 80004f0:	4619      	mov	r1, r3
 80004f2:	480f      	ldr	r0, [pc, #60]	; (8000530 <main+0x178>)
 80004f4:	f000 fb37 	bl	8000b66 <SPI_SendData>
			uint8_t analogRead;
			SPI_ReceiveData(SPI2, &analogRead, 1);
 80004f8:	1dfb      	adds	r3, r7, #7
 80004fa:	2201      	movs	r2, #1
 80004fc:	4619      	mov	r1, r3
 80004fe:	480c      	ldr	r0, [pc, #48]	; (8000530 <main+0x178>)
 8000500:	f000 fb67 	bl	8000bd2 <SPI_ReceiveData>
			printf("COMMAND_SENSOR_READ executed %d\n", analogRead);
 8000504:	79fb      	ldrb	r3, [r7, #7]
 8000506:	4619      	mov	r1, r3
 8000508:	480c      	ldr	r0, [pc, #48]	; (800053c <main+0x184>)
 800050a:	f000 fbff 	bl	8000d0c <iprintf>
		}

		while(SPI_GetFlagStatus(SPI2, SPI_BSY_FLAG));
 800050e:	bf00      	nop
 8000510:	2180      	movs	r1, #128	; 0x80
 8000512:	4807      	ldr	r0, [pc, #28]	; (8000530 <main+0x178>)
 8000514:	f000 fb13 	bl	8000b3e <SPI_GetFlagStatus>
 8000518:	4603      	mov	r3, r0
 800051a:	2b00      	cmp	r3, #0
 800051c:	d1f8      	bne.n	8000510 <main+0x158>
		SPI_PeripheralControl(SPI2, DISABLE);
 800051e:	2100      	movs	r1, #0
 8000520:	4803      	ldr	r0, [pc, #12]	; (8000530 <main+0x178>)
 8000522:	f000 fb8c 	bl	8000c3e <SPI_PeripheralControl>
	{
 8000526:	e75e      	b.n	80003e6 <main+0x2e>
 8000528:	08002158 	.word	0x08002158
 800052c:	08002170 	.word	0x08002170
 8000530:	40003800 	.word	0x40003800
 8000534:	40020000 	.word	0x40020000
 8000538:	08002180 	.word	0x08002180
 800053c:	0800219c 	.word	0x0800219c

08000540 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000540:	480d      	ldr	r0, [pc, #52]	; (8000578 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000542:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x6>)
  ldr r1, =_edata
 8000546:	490e      	ldr	r1, [pc, #56]	; (8000580 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000548:	4a0e      	ldr	r2, [pc, #56]	; (8000584 <LoopForever+0xe>)
  movs r3, #0
 800054a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800054c:	e002      	b.n	8000554 <LoopCopyDataInit>

0800054e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800054e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000550:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000552:	3304      	adds	r3, #4

08000554 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000554:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000556:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000558:	d3f9      	bcc.n	800054e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800055a:	4a0b      	ldr	r2, [pc, #44]	; (8000588 <LoopForever+0x12>)
  ldr r4, =_ebss
 800055c:	4c0b      	ldr	r4, [pc, #44]	; (800058c <LoopForever+0x16>)
  movs r3, #0
 800055e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000560:	e001      	b.n	8000566 <LoopFillZerobss>

08000562 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000562:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000564:	3204      	adds	r2, #4

08000566 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000566:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000568:	d3fb      	bcc.n	8000562 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800056a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800056e:	f000 fba1 	bl	8000cb4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000572:	f7ff ff21 	bl	80003b8 <main>

08000576 <LoopForever>:

LoopForever:
    b LoopForever
 8000576:	e7fe      	b.n	8000576 <LoopForever>
  ldr   r0, =_estack
 8000578:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800057c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000580:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000584:	0800227c 	.word	0x0800227c
  ldr r2, =_sbss
 8000588:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 800058c:	20000148 	.word	0x20000148

08000590 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000590:	e7fe      	b.n	8000590 <ADC_IRQHandler>
	...

08000594 <GPIO_PeriClockControl>:
 *
 * @note		- 	None
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t * pGPIOx, uint8_t EnOrDi)
{
 8000594:	b480      	push	{r7}
 8000596:	b083      	sub	sp, #12
 8000598:	af00      	add	r7, sp, #0
 800059a:	6078      	str	r0, [r7, #4]
 800059c:	460b      	mov	r3, r1
 800059e:	70fb      	strb	r3, [r7, #3]
	if(ENABLE == EnOrDi)
 80005a0:	78fb      	ldrb	r3, [r7, #3]
 80005a2:	2b01      	cmp	r3, #1
 80005a4:	d161      	bne.n	800066a <GPIO_PeriClockControl+0xd6>
	{
		if(GPIOA == pGPIOx)
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	4a33      	ldr	r2, [pc, #204]	; (8000678 <GPIO_PeriClockControl+0xe4>)
 80005aa:	4293      	cmp	r3, r2
 80005ac:	d106      	bne.n	80005bc <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80005ae:	4b33      	ldr	r3, [pc, #204]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005b2:	4a32      	ldr	r2, [pc, #200]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005b4:	f043 0301 	orr.w	r3, r3, #1
 80005b8:	6313      	str	r3, [r2, #48]	; 0x30
	}
	else
	{
		// TODO
	}
}
 80005ba:	e056      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOB == pGPIOx)
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	4a30      	ldr	r2, [pc, #192]	; (8000680 <GPIO_PeriClockControl+0xec>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d106      	bne.n	80005d2 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80005c4:	4b2d      	ldr	r3, [pc, #180]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c8:	4a2c      	ldr	r2, [pc, #176]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005ca:	f043 0302 	orr.w	r3, r3, #2
 80005ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005d0:	e04b      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOC == pGPIOx)
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	4a2b      	ldr	r2, [pc, #172]	; (8000684 <GPIO_PeriClockControl+0xf0>)
 80005d6:	4293      	cmp	r3, r2
 80005d8:	d106      	bne.n	80005e8 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80005da:	4b28      	ldr	r3, [pc, #160]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005de:	4a27      	ldr	r2, [pc, #156]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005e0:	f043 0304 	orr.w	r3, r3, #4
 80005e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005e6:	e040      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOD == pGPIOx)
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	4a27      	ldr	r2, [pc, #156]	; (8000688 <GPIO_PeriClockControl+0xf4>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d106      	bne.n	80005fe <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80005f0:	4b22      	ldr	r3, [pc, #136]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005f4:	4a21      	ldr	r2, [pc, #132]	; (800067c <GPIO_PeriClockControl+0xe8>)
 80005f6:	f043 0308 	orr.w	r3, r3, #8
 80005fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005fc:	e035      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOE == pGPIOx)
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4a22      	ldr	r2, [pc, #136]	; (800068c <GPIO_PeriClockControl+0xf8>)
 8000602:	4293      	cmp	r3, r2
 8000604:	d106      	bne.n	8000614 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000606:	4b1d      	ldr	r3, [pc, #116]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000608:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060a:	4a1c      	ldr	r2, [pc, #112]	; (800067c <GPIO_PeriClockControl+0xe8>)
 800060c:	f043 0310 	orr.w	r3, r3, #16
 8000610:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000612:	e02a      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOF == pGPIOx)
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	4a1e      	ldr	r2, [pc, #120]	; (8000690 <GPIO_PeriClockControl+0xfc>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d106      	bne.n	800062a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800061c:	4b17      	ldr	r3, [pc, #92]	; (800067c <GPIO_PeriClockControl+0xe8>)
 800061e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000620:	4a16      	ldr	r2, [pc, #88]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000622:	f043 0320 	orr.w	r3, r3, #32
 8000626:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000628:	e01f      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOG == pGPIOx)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4a19      	ldr	r2, [pc, #100]	; (8000694 <GPIO_PeriClockControl+0x100>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d106      	bne.n	8000640 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000632:	4b12      	ldr	r3, [pc, #72]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000636:	4a11      	ldr	r2, [pc, #68]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000638:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800063c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800063e:	e014      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOH == pGPIOx)
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	4a15      	ldr	r2, [pc, #84]	; (8000698 <GPIO_PeriClockControl+0x104>)
 8000644:	4293      	cmp	r3, r2
 8000646:	d106      	bne.n	8000656 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000648:	4b0c      	ldr	r3, [pc, #48]	; (800067c <GPIO_PeriClockControl+0xe8>)
 800064a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800064c:	4a0b      	ldr	r2, [pc, #44]	; (800067c <GPIO_PeriClockControl+0xe8>)
 800064e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000652:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000654:	e009      	b.n	800066a <GPIO_PeriClockControl+0xd6>
		else if(GPIOI == pGPIOx)
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	4a10      	ldr	r2, [pc, #64]	; (800069c <GPIO_PeriClockControl+0x108>)
 800065a:	4293      	cmp	r3, r2
 800065c:	d105      	bne.n	800066a <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 800065e:	4b07      	ldr	r3, [pc, #28]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000662:	4a06      	ldr	r2, [pc, #24]	; (800067c <GPIO_PeriClockControl+0xe8>)
 8000664:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000668:	6313      	str	r3, [r2, #48]	; 0x30
}
 800066a:	bf00      	nop
 800066c:	370c      	adds	r7, #12
 800066e:	46bd      	mov	sp, r7
 8000670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000674:	4770      	bx	lr
 8000676:	bf00      	nop
 8000678:	40020000 	.word	0x40020000
 800067c:	40023800 	.word	0x40023800
 8000680:	40020400 	.word	0x40020400
 8000684:	40020800 	.word	0x40020800
 8000688:	40020c00 	.word	0x40020c00
 800068c:	40021000 	.word	0x40021000
 8000690:	40021400 	.word	0x40021400
 8000694:	40021800 	.word	0x40021800
 8000698:	40021c00 	.word	0x40021c00
 800069c:	40022000 	.word	0x40022000

080006a0 <GPIO_Init>:
/*
 * Init and De-Init
 */

void GPIO_Init(GPIO_Handle_t * pGPIOHandle)
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	b086      	sub	sp, #24
 80006a4:	af00      	add	r7, sp, #0
 80006a6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80006a8:	2300      	movs	r3, #0
 80006aa:	617b      	str	r3, [r7, #20]

	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	2101      	movs	r1, #1
 80006b2:	4618      	mov	r0, r3
 80006b4:	f7ff ff6e 	bl	8000594 <GPIO_PeriClockControl>

	// 1. Configure the mode of the GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	795b      	ldrb	r3, [r3, #5]
 80006bc:	2b03      	cmp	r3, #3
 80006be:	d820      	bhi.n	8000702 <GPIO_Init+0x62>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	795b      	ldrb	r3, [r3, #5]
 80006c4:	461a      	mov	r2, r3
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	791b      	ldrb	r3, [r3, #4]
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	fa02 f303 	lsl.w	r3, r2, r3
 80006d0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	681a      	ldr	r2, [r3, #0]
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	791b      	ldrb	r3, [r3, #4]
 80006dc:	005b      	lsls	r3, r3, #1
 80006de:	2103      	movs	r1, #3
 80006e0:	fa01 f303 	lsl.w	r3, r1, r3
 80006e4:	43db      	mvns	r3, r3
 80006e6:	4619      	mov	r1, r3
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	400a      	ands	r2, r1
 80006ee:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	6819      	ldr	r1, [r3, #0]
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	697a      	ldr	r2, [r7, #20]
 80006fc:	430a      	orrs	r2, r1
 80006fe:	601a      	str	r2, [r3, #0]
 8000700:	e0cb      	b.n	800089a <GPIO_Init+0x1fa>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	795b      	ldrb	r3, [r3, #5]
 8000706:	2b04      	cmp	r3, #4
 8000708:	d117      	bne.n	800073a <GPIO_Init+0x9a>
		{
			// 1. Configuration of FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800070a:	4b4b      	ldr	r3, [pc, #300]	; (8000838 <GPIO_Init+0x198>)
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	687a      	ldr	r2, [r7, #4]
 8000710:	7912      	ldrb	r2, [r2, #4]
 8000712:	4611      	mov	r1, r2
 8000714:	2201      	movs	r2, #1
 8000716:	408a      	lsls	r2, r1
 8000718:	4611      	mov	r1, r2
 800071a:	4a47      	ldr	r2, [pc, #284]	; (8000838 <GPIO_Init+0x198>)
 800071c:	430b      	orrs	r3, r1
 800071e:	60d3      	str	r3, [r2, #12]

			// Clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000720:	4b45      	ldr	r3, [pc, #276]	; (8000838 <GPIO_Init+0x198>)
 8000722:	689b      	ldr	r3, [r3, #8]
 8000724:	687a      	ldr	r2, [r7, #4]
 8000726:	7912      	ldrb	r2, [r2, #4]
 8000728:	4611      	mov	r1, r2
 800072a:	2201      	movs	r2, #1
 800072c:	408a      	lsls	r2, r1
 800072e:	43d2      	mvns	r2, r2
 8000730:	4611      	mov	r1, r2
 8000732:	4a41      	ldr	r2, [pc, #260]	; (8000838 <GPIO_Init+0x198>)
 8000734:	400b      	ands	r3, r1
 8000736:	6093      	str	r3, [r2, #8]
 8000738:	e035      	b.n	80007a6 <GPIO_Init+0x106>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	795b      	ldrb	r3, [r3, #5]
 800073e:	2b05      	cmp	r3, #5
 8000740:	d117      	bne.n	8000772 <GPIO_Init+0xd2>
		{
			// 1. Configuration of RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000742:	4b3d      	ldr	r3, [pc, #244]	; (8000838 <GPIO_Init+0x198>)
 8000744:	689b      	ldr	r3, [r3, #8]
 8000746:	687a      	ldr	r2, [r7, #4]
 8000748:	7912      	ldrb	r2, [r2, #4]
 800074a:	4611      	mov	r1, r2
 800074c:	2201      	movs	r2, #1
 800074e:	408a      	lsls	r2, r1
 8000750:	4611      	mov	r1, r2
 8000752:	4a39      	ldr	r2, [pc, #228]	; (8000838 <GPIO_Init+0x198>)
 8000754:	430b      	orrs	r3, r1
 8000756:	6093      	str	r3, [r2, #8]

			// Clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000758:	4b37      	ldr	r3, [pc, #220]	; (8000838 <GPIO_Init+0x198>)
 800075a:	68db      	ldr	r3, [r3, #12]
 800075c:	687a      	ldr	r2, [r7, #4]
 800075e:	7912      	ldrb	r2, [r2, #4]
 8000760:	4611      	mov	r1, r2
 8000762:	2201      	movs	r2, #1
 8000764:	408a      	lsls	r2, r1
 8000766:	43d2      	mvns	r2, r2
 8000768:	4611      	mov	r1, r2
 800076a:	4a33      	ldr	r2, [pc, #204]	; (8000838 <GPIO_Init+0x198>)
 800076c:	400b      	ands	r3, r1
 800076e:	60d3      	str	r3, [r2, #12]
 8000770:	e019      	b.n	80007a6 <GPIO_Init+0x106>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	795b      	ldrb	r3, [r3, #5]
 8000776:	2b06      	cmp	r3, #6
 8000778:	d115      	bne.n	80007a6 <GPIO_Init+0x106>
		{
			// 1. Configuration of RFTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800077a:	4b2f      	ldr	r3, [pc, #188]	; (8000838 <GPIO_Init+0x198>)
 800077c:	68db      	ldr	r3, [r3, #12]
 800077e:	687a      	ldr	r2, [r7, #4]
 8000780:	7912      	ldrb	r2, [r2, #4]
 8000782:	4611      	mov	r1, r2
 8000784:	2201      	movs	r2, #1
 8000786:	408a      	lsls	r2, r1
 8000788:	4611      	mov	r1, r2
 800078a:	4a2b      	ldr	r2, [pc, #172]	; (8000838 <GPIO_Init+0x198>)
 800078c:	430b      	orrs	r3, r1
 800078e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000790:	4b29      	ldr	r3, [pc, #164]	; (8000838 <GPIO_Init+0x198>)
 8000792:	689b      	ldr	r3, [r3, #8]
 8000794:	687a      	ldr	r2, [r7, #4]
 8000796:	7912      	ldrb	r2, [r2, #4]
 8000798:	4611      	mov	r1, r2
 800079a:	2201      	movs	r2, #1
 800079c:	408a      	lsls	r2, r1
 800079e:	4611      	mov	r1, r2
 80007a0:	4a25      	ldr	r2, [pc, #148]	; (8000838 <GPIO_Init+0x198>)
 80007a2:	430b      	orrs	r3, r1
 80007a4:	6093      	str	r3, [r2, #8]
		}
		// 2. Configuration of GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	791b      	ldrb	r3, [r3, #4]
 80007aa:	089b      	lsrs	r3, r3, #2
 80007ac:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	791b      	ldrb	r3, [r3, #4]
 80007b2:	f003 0303 	and.w	r3, r3, #3
 80007b6:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	4a1f      	ldr	r2, [pc, #124]	; (800083c <GPIO_Init+0x19c>)
 80007be:	4293      	cmp	r3, r2
 80007c0:	d04e      	beq.n	8000860 <GPIO_Init+0x1c0>
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	4a1e      	ldr	r2, [pc, #120]	; (8000840 <GPIO_Init+0x1a0>)
 80007c8:	4293      	cmp	r3, r2
 80007ca:	d032      	beq.n	8000832 <GPIO_Init+0x192>
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	4a1c      	ldr	r2, [pc, #112]	; (8000844 <GPIO_Init+0x1a4>)
 80007d2:	4293      	cmp	r3, r2
 80007d4:	d02b      	beq.n	800082e <GPIO_Init+0x18e>
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	4a1b      	ldr	r2, [pc, #108]	; (8000848 <GPIO_Init+0x1a8>)
 80007dc:	4293      	cmp	r3, r2
 80007de:	d024      	beq.n	800082a <GPIO_Init+0x18a>
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	4a19      	ldr	r2, [pc, #100]	; (800084c <GPIO_Init+0x1ac>)
 80007e6:	4293      	cmp	r3, r2
 80007e8:	d01d      	beq.n	8000826 <GPIO_Init+0x186>
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	4a18      	ldr	r2, [pc, #96]	; (8000850 <GPIO_Init+0x1b0>)
 80007f0:	4293      	cmp	r3, r2
 80007f2:	d016      	beq.n	8000822 <GPIO_Init+0x182>
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	4a16      	ldr	r2, [pc, #88]	; (8000854 <GPIO_Init+0x1b4>)
 80007fa:	4293      	cmp	r3, r2
 80007fc:	d00f      	beq.n	800081e <GPIO_Init+0x17e>
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	4a15      	ldr	r2, [pc, #84]	; (8000858 <GPIO_Init+0x1b8>)
 8000804:	4293      	cmp	r3, r2
 8000806:	d008      	beq.n	800081a <GPIO_Init+0x17a>
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	4a13      	ldr	r2, [pc, #76]	; (800085c <GPIO_Init+0x1bc>)
 800080e:	4293      	cmp	r3, r2
 8000810:	d101      	bne.n	8000816 <GPIO_Init+0x176>
 8000812:	2308      	movs	r3, #8
 8000814:	e025      	b.n	8000862 <GPIO_Init+0x1c2>
 8000816:	2300      	movs	r3, #0
 8000818:	e023      	b.n	8000862 <GPIO_Init+0x1c2>
 800081a:	2307      	movs	r3, #7
 800081c:	e021      	b.n	8000862 <GPIO_Init+0x1c2>
 800081e:	2306      	movs	r3, #6
 8000820:	e01f      	b.n	8000862 <GPIO_Init+0x1c2>
 8000822:	2305      	movs	r3, #5
 8000824:	e01d      	b.n	8000862 <GPIO_Init+0x1c2>
 8000826:	2304      	movs	r3, #4
 8000828:	e01b      	b.n	8000862 <GPIO_Init+0x1c2>
 800082a:	2303      	movs	r3, #3
 800082c:	e019      	b.n	8000862 <GPIO_Init+0x1c2>
 800082e:	2302      	movs	r3, #2
 8000830:	e017      	b.n	8000862 <GPIO_Init+0x1c2>
 8000832:	2301      	movs	r3, #1
 8000834:	e015      	b.n	8000862 <GPIO_Init+0x1c2>
 8000836:	bf00      	nop
 8000838:	40013c00 	.word	0x40013c00
 800083c:	40020000 	.word	0x40020000
 8000840:	40020400 	.word	0x40020400
 8000844:	40020800 	.word	0x40020800
 8000848:	40020c00 	.word	0x40020c00
 800084c:	40021000 	.word	0x40021000
 8000850:	40021400 	.word	0x40021400
 8000854:	40021800 	.word	0x40021800
 8000858:	40021c00 	.word	0x40021c00
 800085c:	40022000 	.word	0x40022000
 8000860:	2300      	movs	r3, #0
 8000862:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000864:	4b5e      	ldr	r3, [pc, #376]	; (80009e0 <GPIO_Init+0x340>)
 8000866:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000868:	4a5d      	ldr	r2, [pc, #372]	; (80009e0 <GPIO_Init+0x340>)
 800086a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800086e:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000870:	7c7a      	ldrb	r2, [r7, #17]
 8000872:	7cbb      	ldrb	r3, [r7, #18]
 8000874:	009b      	lsls	r3, r3, #2
 8000876:	fa02 f103 	lsl.w	r1, r2, r3
 800087a:	4a5a      	ldr	r2, [pc, #360]	; (80009e4 <GPIO_Init+0x344>)
 800087c:	7cfb      	ldrb	r3, [r7, #19]
 800087e:	3302      	adds	r3, #2
 8000880:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. Enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000884:	4b58      	ldr	r3, [pc, #352]	; (80009e8 <GPIO_Init+0x348>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	687a      	ldr	r2, [r7, #4]
 800088a:	7912      	ldrb	r2, [r2, #4]
 800088c:	4611      	mov	r1, r2
 800088e:	2201      	movs	r2, #1
 8000890:	408a      	lsls	r2, r1
 8000892:	4611      	mov	r1, r2
 8000894:	4a54      	ldr	r2, [pc, #336]	; (80009e8 <GPIO_Init+0x348>)
 8000896:	430b      	orrs	r3, r1
 8000898:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 800089a:	2300      	movs	r3, #0
 800089c:	617b      	str	r3, [r7, #20]
	// 2. Configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800089e:	687b      	ldr	r3, [r7, #4]
 80008a0:	799b      	ldrb	r3, [r3, #6]
 80008a2:	461a      	mov	r2, r3
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	791b      	ldrb	r3, [r3, #4]
 80008a8:	005b      	lsls	r3, r3, #1
 80008aa:	fa02 f303 	lsl.w	r3, r2, r3
 80008ae:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	689a      	ldr	r2, [r3, #8]
 80008b6:	687b      	ldr	r3, [r7, #4]
 80008b8:	791b      	ldrb	r3, [r3, #4]
 80008ba:	005b      	lsls	r3, r3, #1
 80008bc:	2103      	movs	r1, #3
 80008be:	fa01 f303 	lsl.w	r3, r1, r3
 80008c2:	43db      	mvns	r3, r3
 80008c4:	4619      	mov	r1, r3
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	681b      	ldr	r3, [r3, #0]
 80008ca:	400a      	ands	r2, r1
 80008cc:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	681b      	ldr	r3, [r3, #0]
 80008d2:	6899      	ldr	r1, [r3, #8]
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	697a      	ldr	r2, [r7, #20]
 80008da:	430a      	orrs	r2, r1
 80008dc:	609a      	str	r2, [r3, #8]

	temp = 0;
 80008de:	2300      	movs	r3, #0
 80008e0:	617b      	str	r3, [r7, #20]

	// 3. Configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80008e2:	687b      	ldr	r3, [r7, #4]
 80008e4:	79db      	ldrb	r3, [r3, #7]
 80008e6:	461a      	mov	r2, r3
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	791b      	ldrb	r3, [r3, #4]
 80008ec:	005b      	lsls	r3, r3, #1
 80008ee:	fa02 f303 	lsl.w	r3, r2, r3
 80008f2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	68da      	ldr	r2, [r3, #12]
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	791b      	ldrb	r3, [r3, #4]
 80008fe:	005b      	lsls	r3, r3, #1
 8000900:	2103      	movs	r1, #3
 8000902:	fa01 f303 	lsl.w	r3, r1, r3
 8000906:	43db      	mvns	r3, r3
 8000908:	4619      	mov	r1, r3
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	681b      	ldr	r3, [r3, #0]
 800090e:	400a      	ands	r2, r1
 8000910:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	681b      	ldr	r3, [r3, #0]
 8000916:	68d9      	ldr	r1, [r3, #12]
 8000918:	687b      	ldr	r3, [r7, #4]
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	697a      	ldr	r2, [r7, #20]
 800091e:	430a      	orrs	r2, r1
 8000920:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000922:	2300      	movs	r3, #0
 8000924:	617b      	str	r3, [r7, #20]

	// 4. Configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	7a1b      	ldrb	r3, [r3, #8]
 800092a:	461a      	mov	r2, r3
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	791b      	ldrb	r3, [r3, #4]
 8000930:	fa02 f303 	lsl.w	r3, r2, r3
 8000934:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	681b      	ldr	r3, [r3, #0]
 800093a:	685a      	ldr	r2, [r3, #4]
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	791b      	ldrb	r3, [r3, #4]
 8000940:	4619      	mov	r1, r3
 8000942:	2301      	movs	r3, #1
 8000944:	408b      	lsls	r3, r1
 8000946:	43db      	mvns	r3, r3
 8000948:	4619      	mov	r1, r3
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	400a      	ands	r2, r1
 8000950:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	681b      	ldr	r3, [r3, #0]
 8000956:	6859      	ldr	r1, [r3, #4]
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	697a      	ldr	r2, [r7, #20]
 800095e:	430a      	orrs	r2, r1
 8000960:	605a      	str	r2, [r3, #4]

	// 5. Configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	795b      	ldrb	r3, [r3, #5]
 8000966:	2b02      	cmp	r3, #2
 8000968:	d136      	bne.n	80009d8 <GPIO_Init+0x338>
	{
		// Configure alt function registers
		uint32_t temp1 = 0;
 800096a:	2300      	movs	r3, #0
 800096c:	60fb      	str	r3, [r7, #12]
		uint32_t temp2 = 0;
 800096e:	2300      	movs	r3, #0
 8000970:	60bb      	str	r3, [r7, #8]

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000972:	687b      	ldr	r3, [r7, #4]
 8000974:	791b      	ldrb	r3, [r3, #4]
 8000976:	08db      	lsrs	r3, r3, #3
 8000978:	b2db      	uxtb	r3, r3
 800097a:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	791b      	ldrb	r3, [r3, #4]
 8000980:	f003 0307 	and.w	r3, r3, #7
 8000984:	60bb      	str	r3, [r7, #8]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0x0F << (4 * temp2));
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	68fa      	ldr	r2, [r7, #12]
 800098c:	3208      	adds	r2, #8
 800098e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000992:	68bb      	ldr	r3, [r7, #8]
 8000994:	009b      	lsls	r3, r3, #2
 8000996:	210f      	movs	r1, #15
 8000998:	fa01 f303 	lsl.w	r3, r1, r3
 800099c:	43db      	mvns	r3, r3
 800099e:	4619      	mov	r1, r3
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	4011      	ands	r1, r2
 80009a6:	68fa      	ldr	r2, [r7, #12]
 80009a8:	3208      	adds	r2, #8
 80009aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	681b      	ldr	r3, [r3, #0]
 80009b2:	68fa      	ldr	r2, [r7, #12]
 80009b4:	3208      	adds	r2, #8
 80009b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80009ba:	687b      	ldr	r3, [r7, #4]
 80009bc:	7a5b      	ldrb	r3, [r3, #9]
 80009be:	4619      	mov	r1, r3
 80009c0:	68bb      	ldr	r3, [r7, #8]
 80009c2:	009b      	lsls	r3, r3, #2
 80009c4:	fa01 f303 	lsl.w	r3, r1, r3
 80009c8:	4619      	mov	r1, r3
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	4311      	orrs	r1, r2
 80009d0:	68fa      	ldr	r2, [r7, #12]
 80009d2:	3208      	adds	r2, #8
 80009d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80009d8:	bf00      	nop
 80009da:	3718      	adds	r7, #24
 80009dc:	46bd      	mov	sp, r7
 80009de:	bd80      	pop	{r7, pc}
 80009e0:	40023800 	.word	0x40023800
 80009e4:	40013800 	.word	0x40013800
 80009e8:	40013c00 	.word	0x40013c00

080009ec <GPIO_ReadFromInputPin>:
/*
 * Data read and write
 */

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t * pGPIOx, uint8_t PinNumber)
{
 80009ec:	b480      	push	{r7}
 80009ee:	b085      	sub	sp, #20
 80009f0:	af00      	add	r7, sp, #0
 80009f2:	6078      	str	r0, [r7, #4]
 80009f4:	460b      	mov	r3, r1
 80009f6:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	691a      	ldr	r2, [r3, #16]
 80009fc:	78fb      	ldrb	r3, [r7, #3]
 80009fe:	fa22 f303 	lsr.w	r3, r2, r3
 8000a02:	b2db      	uxtb	r3, r3
 8000a04:	f003 0301 	and.w	r3, r3, #1
 8000a08:	73fb      	strb	r3, [r7, #15]
	return value;
 8000a0a:	7bfb      	ldrb	r3, [r7, #15]
}
 8000a0c:	4618      	mov	r0, r3
 8000a0e:	3714      	adds	r7, #20
 8000a10:	46bd      	mov	sp, r7
 8000a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a16:	4770      	bx	lr

08000a18 <SPI_PeriClockControl>:

/*
 * Peripheral clock setup
 */
void SPI_PeriClockControl(SPI_RegDef_t * pSPIx, uint8_t EnOrDi)
{
 8000a18:	b480      	push	{r7}
 8000a1a:	b083      	sub	sp, #12
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	6078      	str	r0, [r7, #4]
 8000a20:	460b      	mov	r3, r1
 8000a22:	70fb      	strb	r3, [r7, #3]
	if(ENABLE == EnOrDi)
 8000a24:	78fb      	ldrb	r3, [r7, #3]
 8000a26:	2b01      	cmp	r3, #1
 8000a28:	d11f      	bne.n	8000a6a <SPI_PeriClockControl+0x52>
	{
		if(SPI1 == pSPIx)
 8000a2a:	687b      	ldr	r3, [r7, #4]
 8000a2c:	4a12      	ldr	r2, [pc, #72]	; (8000a78 <SPI_PeriClockControl+0x60>)
 8000a2e:	4293      	cmp	r3, r2
 8000a30:	d106      	bne.n	8000a40 <SPI_PeriClockControl+0x28>
		{
			SPI1_PCLK_EN();
 8000a32:	4b12      	ldr	r3, [pc, #72]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a36:	4a11      	ldr	r2, [pc, #68]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a38:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a3c:	6453      	str	r3, [r2, #68]	; 0x44
	}
	else
	{
		// TODO
	}
}
 8000a3e:	e014      	b.n	8000a6a <SPI_PeriClockControl+0x52>
		else if(SPI2 == pSPIx)
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	4a0f      	ldr	r2, [pc, #60]	; (8000a80 <SPI_PeriClockControl+0x68>)
 8000a44:	4293      	cmp	r3, r2
 8000a46:	d106      	bne.n	8000a56 <SPI_PeriClockControl+0x3e>
			SPI2_PCLK_EN();
 8000a48:	4b0c      	ldr	r3, [pc, #48]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a4c:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a4e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000a52:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000a54:	e009      	b.n	8000a6a <SPI_PeriClockControl+0x52>
		else if(SPI3 == pSPIx)
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	4a0a      	ldr	r2, [pc, #40]	; (8000a84 <SPI_PeriClockControl+0x6c>)
 8000a5a:	4293      	cmp	r3, r2
 8000a5c:	d105      	bne.n	8000a6a <SPI_PeriClockControl+0x52>
			SPI3_PCLK_EN();
 8000a5e:	4b07      	ldr	r3, [pc, #28]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a62:	4a06      	ldr	r2, [pc, #24]	; (8000a7c <SPI_PeriClockControl+0x64>)
 8000a64:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a68:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000a6a:	bf00      	nop
 8000a6c:	370c      	adds	r7, #12
 8000a6e:	46bd      	mov	sp, r7
 8000a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a74:	4770      	bx	lr
 8000a76:	bf00      	nop
 8000a78:	40013000 	.word	0x40013000
 8000a7c:	40023800 	.word	0x40023800
 8000a80:	40003800 	.word	0x40003800
 8000a84:	40003c00 	.word	0x40003c00

08000a88 <SPI_Init>:

/*
 * Init and de-init
 */
void SPI_Init(SPI_Handle_t * pSPIHandle)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b084      	sub	sp, #16
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
	// 1. Configuration of SPI_CR1 register
	uint32_t tempReg = 0;
 8000a90:	2300      	movs	r3, #0
 8000a92:	60fb      	str	r3, [r7, #12]

	SPI_PeriClockControl(pSPIHandle->pSPIx, ENABLE);
 8000a94:	687b      	ldr	r3, [r7, #4]
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	2101      	movs	r1, #1
 8000a9a:	4618      	mov	r0, r3
 8000a9c:	f7ff ffbc 	bl	8000a18 <SPI_PeriClockControl>

	// 1.1 Configuration of device mode
	tempReg |= pSPIHandle->SPIConfig.SPI_DevideMode << SPI_CR1_MSTR;
 8000aa0:	687b      	ldr	r3, [r7, #4]
 8000aa2:	791b      	ldrb	r3, [r3, #4]
 8000aa4:	009b      	lsls	r3, r3, #2
 8000aa6:	461a      	mov	r2, r3
 8000aa8:	68fb      	ldr	r3, [r7, #12]
 8000aaa:	4313      	orrs	r3, r2
 8000aac:	60fb      	str	r3, [r7, #12]

	// 1.2 Configuration of bus config
	if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 8000aae:	687b      	ldr	r3, [r7, #4]
 8000ab0:	795b      	ldrb	r3, [r3, #5]
 8000ab2:	2b01      	cmp	r3, #1
 8000ab4:	d104      	bne.n	8000ac0 <SPI_Init+0x38>
	{
		// BIDIMODE Should be cleared
		tempReg &= ~(1 << SPI_CR1_BIDIMODE);
 8000ab6:	68fb      	ldr	r3, [r7, #12]
 8000ab8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000abc:	60fb      	str	r3, [r7, #12]
 8000abe:	e014      	b.n	8000aea <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	795b      	ldrb	r3, [r3, #5]
 8000ac4:	2b02      	cmp	r3, #2
 8000ac6:	d104      	bne.n	8000ad2 <SPI_Init+0x4a>
	{
		// BIDIMODE should be set
		tempReg |= (1 << SPI_CR1_BIDIMODE);
 8000ac8:	68fb      	ldr	r3, [r7, #12]
 8000aca:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000ace:	60fb      	str	r3, [r7, #12]
 8000ad0:	e00b      	b.n	8000aea <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_S_RX)
 8000ad2:	687b      	ldr	r3, [r7, #4]
 8000ad4:	795b      	ldrb	r3, [r3, #5]
 8000ad6:	2b03      	cmp	r3, #3
 8000ad8:	d107      	bne.n	8000aea <SPI_Init+0x62>
	{
		// BIDIMODE should be cleared
		// RXONLY must be set
		tempReg &= ~(1 << SPI_CR1_BIDIMODE);
 8000ada:	68fb      	ldr	r3, [r7, #12]
 8000adc:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000ae0:	60fb      	str	r3, [r7, #12]
		tempReg |= (1 << SPI_CR1_RXONLY);
 8000ae2:	68fb      	ldr	r3, [r7, #12]
 8000ae4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000ae8:	60fb      	str	r3, [r7, #12]
	}

	// 1.3 Configuration of SPI serial clock speed (baud rate)
	tempReg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR;
 8000aea:	687b      	ldr	r3, [r7, #4]
 8000aec:	799b      	ldrb	r3, [r3, #6]
 8000aee:	00db      	lsls	r3, r3, #3
 8000af0:	461a      	mov	r2, r3
 8000af2:	68fb      	ldr	r3, [r7, #12]
 8000af4:	4313      	orrs	r3, r2
 8000af6:	60fb      	str	r3, [r7, #12]

	// 1.4 Configuration of DFF
	tempReg |= pSPIHandle->SPIConfig.SPI_DFF << SPI_CR1_DFF;
 8000af8:	687b      	ldr	r3, [r7, #4]
 8000afa:	79db      	ldrb	r3, [r3, #7]
 8000afc:	02db      	lsls	r3, r3, #11
 8000afe:	461a      	mov	r2, r3
 8000b00:	68fb      	ldr	r3, [r7, #12]
 8000b02:	4313      	orrs	r3, r2
 8000b04:	60fb      	str	r3, [r7, #12]

	// 1.5 Configuration of CPOL
	tempReg |= pSPIHandle->SPIConfig.SPI_CPOL << SPI_CR1_CPOL;
 8000b06:	687b      	ldr	r3, [r7, #4]
 8000b08:	7a1b      	ldrb	r3, [r3, #8]
 8000b0a:	005b      	lsls	r3, r3, #1
 8000b0c:	461a      	mov	r2, r3
 8000b0e:	68fb      	ldr	r3, [r7, #12]
 8000b10:	4313      	orrs	r3, r2
 8000b12:	60fb      	str	r3, [r7, #12]

	// 1.6 Configuration of CPHA
	tempReg |= pSPIHandle->SPIConfig.SPI_CPHA << SPI_CR1_CPHA;
 8000b14:	687b      	ldr	r3, [r7, #4]
 8000b16:	7a5b      	ldrb	r3, [r3, #9]
 8000b18:	461a      	mov	r2, r3
 8000b1a:	68fb      	ldr	r3, [r7, #12]
 8000b1c:	4313      	orrs	r3, r2
 8000b1e:	60fb      	str	r3, [r7, #12]

	// 1.7 Configuration of SSM
	tempReg |= pSPIHandle->SPIConfig.SPI_SSM << SPI_CR1_SSM;
 8000b20:	687b      	ldr	r3, [r7, #4]
 8000b22:	7a9b      	ldrb	r3, [r3, #10]
 8000b24:	025b      	lsls	r3, r3, #9
 8000b26:	461a      	mov	r2, r3
 8000b28:	68fb      	ldr	r3, [r7, #12]
 8000b2a:	4313      	orrs	r3, r2
 8000b2c:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1 = tempReg;
 8000b2e:	687b      	ldr	r3, [r7, #4]
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	68fa      	ldr	r2, [r7, #12]
 8000b34:	601a      	str	r2, [r3, #0]
}
 8000b36:	bf00      	nop
 8000b38:	3710      	adds	r7, #16
 8000b3a:	46bd      	mov	sp, r7
 8000b3c:	bd80      	pop	{r7, pc}

08000b3e <SPI_GetFlagStatus>:
{
	// TODO
}

uint8_t SPI_GetFlagStatus(SPI_RegDef_t * pSPIx, uint32_t flagName)
{
 8000b3e:	b480      	push	{r7}
 8000b40:	b083      	sub	sp, #12
 8000b42:	af00      	add	r7, sp, #0
 8000b44:	6078      	str	r0, [r7, #4]
 8000b46:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & flagName)
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	689a      	ldr	r2, [r3, #8]
 8000b4c:	683b      	ldr	r3, [r7, #0]
 8000b4e:	4013      	ands	r3, r2
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d001      	beq.n	8000b58 <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8000b54:	2301      	movs	r3, #1
 8000b56:	e000      	b.n	8000b5a <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 8000b58:	2300      	movs	r3, #0
}
 8000b5a:	4618      	mov	r0, r3
 8000b5c:	370c      	adds	r7, #12
 8000b5e:	46bd      	mov	sp, r7
 8000b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b64:	4770      	bx	lr

08000b66 <SPI_SendData>:

/*
 * Data send and receive (Blocking call)
 */
void SPI_SendData(SPI_RegDef_t * pSPIx, uint8_t * pTxBuffer, uint32_t length)
{
 8000b66:	b580      	push	{r7, lr}
 8000b68:	b084      	sub	sp, #16
 8000b6a:	af00      	add	r7, sp, #0
 8000b6c:	60f8      	str	r0, [r7, #12]
 8000b6e:	60b9      	str	r1, [r7, #8]
 8000b70:	607a      	str	r2, [r7, #4]
	while(length > 0)
 8000b72:	e027      	b.n	8000bc4 <SPI_SendData+0x5e>
	{
		// 1. Wait until TXE is set
		while(SPI_GetFlagStatus(pSPIx, SPI_TXE_FLAG) == FLAG_RESET);
 8000b74:	bf00      	nop
 8000b76:	2102      	movs	r1, #2
 8000b78:	68f8      	ldr	r0, [r7, #12]
 8000b7a:	f7ff ffe0 	bl	8000b3e <SPI_GetFlagStatus>
 8000b7e:	4603      	mov	r3, r0
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d0f8      	beq.n	8000b76 <SPI_SendData+0x10>

		// 2. Check DFF bit CR1
		if(pSPIx->CR1 & (1 << SPI_CR1_DFF))
 8000b84:	68fb      	ldr	r3, [r7, #12]
 8000b86:	681b      	ldr	r3, [r3, #0]
 8000b88:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d00e      	beq.n	8000bae <SPI_SendData+0x48>
		{
			// 16 bit DFF
			// Load data into DR
			pSPIx->DR = *((uint16_t *) pTxBuffer);
 8000b90:	68bb      	ldr	r3, [r7, #8]
 8000b92:	881b      	ldrh	r3, [r3, #0]
 8000b94:	461a      	mov	r2, r3
 8000b96:	68fb      	ldr	r3, [r7, #12]
 8000b98:	60da      	str	r2, [r3, #12]
			length--;
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	3b01      	subs	r3, #1
 8000b9e:	607b      	str	r3, [r7, #4]
			length--;
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	3b01      	subs	r3, #1
 8000ba4:	607b      	str	r3, [r7, #4]
			(uint16_t *)pTxBuffer++;
 8000ba6:	68bb      	ldr	r3, [r7, #8]
 8000ba8:	3301      	adds	r3, #1
 8000baa:	60bb      	str	r3, [r7, #8]
 8000bac:	e00a      	b.n	8000bc4 <SPI_SendData+0x5e>
		}
		else
		{
			// 8 bit DFF
			pSPIx->DR = *pTxBuffer;
 8000bae:	68bb      	ldr	r3, [r7, #8]
 8000bb0:	781b      	ldrb	r3, [r3, #0]
 8000bb2:	461a      	mov	r2, r3
 8000bb4:	68fb      	ldr	r3, [r7, #12]
 8000bb6:	60da      	str	r2, [r3, #12]
			length--;
 8000bb8:	687b      	ldr	r3, [r7, #4]
 8000bba:	3b01      	subs	r3, #1
 8000bbc:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000bbe:	68bb      	ldr	r3, [r7, #8]
 8000bc0:	3301      	adds	r3, #1
 8000bc2:	60bb      	str	r3, [r7, #8]
	while(length > 0)
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d1d4      	bne.n	8000b74 <SPI_SendData+0xe>
		}
	}
}
 8000bca:	bf00      	nop
 8000bcc:	3710      	adds	r7, #16
 8000bce:	46bd      	mov	sp, r7
 8000bd0:	bd80      	pop	{r7, pc}

08000bd2 <SPI_ReceiveData>:

void SPI_ReceiveData(SPI_RegDef_t * pSPIx, uint8_t * pRxBuffer, uint32_t length)
{
 8000bd2:	b580      	push	{r7, lr}
 8000bd4:	b084      	sub	sp, #16
 8000bd6:	af00      	add	r7, sp, #0
 8000bd8:	60f8      	str	r0, [r7, #12]
 8000bda:	60b9      	str	r1, [r7, #8]
 8000bdc:	607a      	str	r2, [r7, #4]
	while(length > 0)
 8000bde:	e027      	b.n	8000c30 <SPI_ReceiveData+0x5e>
	{
		// 1. Wait until RXNE is set
		while(SPI_GetFlagStatus(pSPIx, SPI_RXNE_FLAG) == FLAG_RESET);
 8000be0:	bf00      	nop
 8000be2:	2101      	movs	r1, #1
 8000be4:	68f8      	ldr	r0, [r7, #12]
 8000be6:	f7ff ffaa 	bl	8000b3e <SPI_GetFlagStatus>
 8000bea:	4603      	mov	r3, r0
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d0f8      	beq.n	8000be2 <SPI_ReceiveData+0x10>

		// 2. Check DFF bit CR1
		if(pSPIx->CR1 & (1 << SPI_CR1_DFF))
 8000bf0:	68fb      	ldr	r3, [r7, #12]
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000bf8:	2b00      	cmp	r3, #0
 8000bfa:	d00e      	beq.n	8000c1a <SPI_ReceiveData+0x48>
		{
			// 16 bit DFF
			// Load data into pRxBuffer
			*((uint16_t *) pRxBuffer) = pSPIx->DR;
 8000bfc:	68fb      	ldr	r3, [r7, #12]
 8000bfe:	68db      	ldr	r3, [r3, #12]
 8000c00:	b29a      	uxth	r2, r3
 8000c02:	68bb      	ldr	r3, [r7, #8]
 8000c04:	801a      	strh	r2, [r3, #0]
			length--;
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	3b01      	subs	r3, #1
 8000c0a:	607b      	str	r3, [r7, #4]
			length--;
 8000c0c:	687b      	ldr	r3, [r7, #4]
 8000c0e:	3b01      	subs	r3, #1
 8000c10:	607b      	str	r3, [r7, #4]
			(uint16_t *)pRxBuffer++;
 8000c12:	68bb      	ldr	r3, [r7, #8]
 8000c14:	3301      	adds	r3, #1
 8000c16:	60bb      	str	r3, [r7, #8]
 8000c18:	e00a      	b.n	8000c30 <SPI_ReceiveData+0x5e>
		}
		else
		{
			// 8 bit DFF
			*pRxBuffer = pSPIx->DR;
 8000c1a:	68fb      	ldr	r3, [r7, #12]
 8000c1c:	68db      	ldr	r3, [r3, #12]
 8000c1e:	b2da      	uxtb	r2, r3
 8000c20:	68bb      	ldr	r3, [r7, #8]
 8000c22:	701a      	strb	r2, [r3, #0]
			length--;
 8000c24:	687b      	ldr	r3, [r7, #4]
 8000c26:	3b01      	subs	r3, #1
 8000c28:	607b      	str	r3, [r7, #4]
			pRxBuffer++;
 8000c2a:	68bb      	ldr	r3, [r7, #8]
 8000c2c:	3301      	adds	r3, #1
 8000c2e:	60bb      	str	r3, [r7, #8]
	while(length > 0)
 8000c30:	687b      	ldr	r3, [r7, #4]
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	d1d4      	bne.n	8000be0 <SPI_ReceiveData+0xe>
		}
	}
}
 8000c36:	bf00      	nop
 8000c38:	3710      	adds	r7, #16
 8000c3a:	46bd      	mov	sp, r7
 8000c3c:	bd80      	pop	{r7, pc}

08000c3e <SPI_PeripheralControl>:

/*
 * Other peripheral control APIs
 */
void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, int8_t EnOrDi)
{
 8000c3e:	b480      	push	{r7}
 8000c40:	b083      	sub	sp, #12
 8000c42:	af00      	add	r7, sp, #0
 8000c44:	6078      	str	r0, [r7, #4]
 8000c46:	460b      	mov	r3, r1
 8000c48:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000c4a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000c4e:	2b01      	cmp	r3, #1
 8000c50:	d106      	bne.n	8000c60 <SPI_PeripheralControl+0x22>
	{
		pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 8000c52:	687b      	ldr	r3, [r7, #4]
 8000c54:	681b      	ldr	r3, [r3, #0]
 8000c56:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
	}
}
 8000c5e:	e005      	b.n	8000c6c <SPI_PeripheralControl+0x2e>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 8000c60:	687b      	ldr	r3, [r7, #4]
 8000c62:	681b      	ldr	r3, [r3, #0]
 8000c64:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	601a      	str	r2, [r3, #0]
}
 8000c6c:	bf00      	nop
 8000c6e:	370c      	adds	r7, #12
 8000c70:	46bd      	mov	sp, r7
 8000c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c76:	4770      	bx	lr

08000c78 <SPI_SSOEConfig>:
		pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
	}
}

void SPI_SSOEConfig(SPI_RegDef_t *pSPIx, int8_t EnOrDi)
{
 8000c78:	b480      	push	{r7}
 8000c7a:	b083      	sub	sp, #12
 8000c7c:	af00      	add	r7, sp, #0
 8000c7e:	6078      	str	r0, [r7, #4]
 8000c80:	460b      	mov	r3, r1
 8000c82:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000c84:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000c88:	2b01      	cmp	r3, #1
 8000c8a:	d106      	bne.n	8000c9a <SPI_SSOEConfig+0x22>
	{
		pSPIx->CR2 |= (1 << SPI_CR2_SSOE);
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	685b      	ldr	r3, [r3, #4]
 8000c90:	f043 0204 	orr.w	r2, r3, #4
 8000c94:	687b      	ldr	r3, [r7, #4]
 8000c96:	605a      	str	r2, [r3, #4]
	}
	else
	{
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
	}
}
 8000c98:	e005      	b.n	8000ca6 <SPI_SSOEConfig+0x2e>
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
 8000c9a:	687b      	ldr	r3, [r7, #4]
 8000c9c:	685b      	ldr	r3, [r3, #4]
 8000c9e:	f023 0204 	bic.w	r2, r3, #4
 8000ca2:	687b      	ldr	r3, [r7, #4]
 8000ca4:	605a      	str	r2, [r3, #4]
}
 8000ca6:	bf00      	nop
 8000ca8:	370c      	adds	r7, #12
 8000caa:	46bd      	mov	sp, r7
 8000cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cb0:	4770      	bx	lr
	...

08000cb4 <__libc_init_array>:
 8000cb4:	b570      	push	{r4, r5, r6, lr}
 8000cb6:	4e0d      	ldr	r6, [pc, #52]	; (8000cec <__libc_init_array+0x38>)
 8000cb8:	4c0d      	ldr	r4, [pc, #52]	; (8000cf0 <__libc_init_array+0x3c>)
 8000cba:	1ba4      	subs	r4, r4, r6
 8000cbc:	10a4      	asrs	r4, r4, #2
 8000cbe:	2500      	movs	r5, #0
 8000cc0:	42a5      	cmp	r5, r4
 8000cc2:	d109      	bne.n	8000cd8 <__libc_init_array+0x24>
 8000cc4:	4e0b      	ldr	r6, [pc, #44]	; (8000cf4 <__libc_init_array+0x40>)
 8000cc6:	4c0c      	ldr	r4, [pc, #48]	; (8000cf8 <__libc_init_array+0x44>)
 8000cc8:	f001 fa3a 	bl	8002140 <_init>
 8000ccc:	1ba4      	subs	r4, r4, r6
 8000cce:	10a4      	asrs	r4, r4, #2
 8000cd0:	2500      	movs	r5, #0
 8000cd2:	42a5      	cmp	r5, r4
 8000cd4:	d105      	bne.n	8000ce2 <__libc_init_array+0x2e>
 8000cd6:	bd70      	pop	{r4, r5, r6, pc}
 8000cd8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000cdc:	4798      	blx	r3
 8000cde:	3501      	adds	r5, #1
 8000ce0:	e7ee      	b.n	8000cc0 <__libc_init_array+0xc>
 8000ce2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000ce6:	4798      	blx	r3
 8000ce8:	3501      	adds	r5, #1
 8000cea:	e7f2      	b.n	8000cd2 <__libc_init_array+0x1e>
 8000cec:	08002274 	.word	0x08002274
 8000cf0:	08002274 	.word	0x08002274
 8000cf4:	08002274 	.word	0x08002274
 8000cf8:	08002278 	.word	0x08002278

08000cfc <memset>:
 8000cfc:	4402      	add	r2, r0
 8000cfe:	4603      	mov	r3, r0
 8000d00:	4293      	cmp	r3, r2
 8000d02:	d100      	bne.n	8000d06 <memset+0xa>
 8000d04:	4770      	bx	lr
 8000d06:	f803 1b01 	strb.w	r1, [r3], #1
 8000d0a:	e7f9      	b.n	8000d00 <memset+0x4>

08000d0c <iprintf>:
 8000d0c:	b40f      	push	{r0, r1, r2, r3}
 8000d0e:	4b0a      	ldr	r3, [pc, #40]	; (8000d38 <iprintf+0x2c>)
 8000d10:	b513      	push	{r0, r1, r4, lr}
 8000d12:	681c      	ldr	r4, [r3, #0]
 8000d14:	b124      	cbz	r4, 8000d20 <iprintf+0x14>
 8000d16:	69a3      	ldr	r3, [r4, #24]
 8000d18:	b913      	cbnz	r3, 8000d20 <iprintf+0x14>
 8000d1a:	4620      	mov	r0, r4
 8000d1c:	f000 fa22 	bl	8001164 <__sinit>
 8000d20:	ab05      	add	r3, sp, #20
 8000d22:	9a04      	ldr	r2, [sp, #16]
 8000d24:	68a1      	ldr	r1, [r4, #8]
 8000d26:	9301      	str	r3, [sp, #4]
 8000d28:	4620      	mov	r0, r4
 8000d2a:	f000 fbdb 	bl	80014e4 <_vfiprintf_r>
 8000d2e:	b002      	add	sp, #8
 8000d30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d34:	b004      	add	sp, #16
 8000d36:	4770      	bx	lr
 8000d38:	20000000 	.word	0x20000000

08000d3c <_puts_r>:
 8000d3c:	b570      	push	{r4, r5, r6, lr}
 8000d3e:	460e      	mov	r6, r1
 8000d40:	4605      	mov	r5, r0
 8000d42:	b118      	cbz	r0, 8000d4c <_puts_r+0x10>
 8000d44:	6983      	ldr	r3, [r0, #24]
 8000d46:	b90b      	cbnz	r3, 8000d4c <_puts_r+0x10>
 8000d48:	f000 fa0c 	bl	8001164 <__sinit>
 8000d4c:	69ab      	ldr	r3, [r5, #24]
 8000d4e:	68ac      	ldr	r4, [r5, #8]
 8000d50:	b913      	cbnz	r3, 8000d58 <_puts_r+0x1c>
 8000d52:	4628      	mov	r0, r5
 8000d54:	f000 fa06 	bl	8001164 <__sinit>
 8000d58:	4b23      	ldr	r3, [pc, #140]	; (8000de8 <_puts_r+0xac>)
 8000d5a:	429c      	cmp	r4, r3
 8000d5c:	d117      	bne.n	8000d8e <_puts_r+0x52>
 8000d5e:	686c      	ldr	r4, [r5, #4]
 8000d60:	89a3      	ldrh	r3, [r4, #12]
 8000d62:	071b      	lsls	r3, r3, #28
 8000d64:	d51d      	bpl.n	8000da2 <_puts_r+0x66>
 8000d66:	6923      	ldr	r3, [r4, #16]
 8000d68:	b1db      	cbz	r3, 8000da2 <_puts_r+0x66>
 8000d6a:	3e01      	subs	r6, #1
 8000d6c:	68a3      	ldr	r3, [r4, #8]
 8000d6e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000d72:	3b01      	subs	r3, #1
 8000d74:	60a3      	str	r3, [r4, #8]
 8000d76:	b9e9      	cbnz	r1, 8000db4 <_puts_r+0x78>
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	da2e      	bge.n	8000dda <_puts_r+0x9e>
 8000d7c:	4622      	mov	r2, r4
 8000d7e:	210a      	movs	r1, #10
 8000d80:	4628      	mov	r0, r5
 8000d82:	f000 f83f 	bl	8000e04 <__swbuf_r>
 8000d86:	3001      	adds	r0, #1
 8000d88:	d011      	beq.n	8000dae <_puts_r+0x72>
 8000d8a:	200a      	movs	r0, #10
 8000d8c:	e011      	b.n	8000db2 <_puts_r+0x76>
 8000d8e:	4b17      	ldr	r3, [pc, #92]	; (8000dec <_puts_r+0xb0>)
 8000d90:	429c      	cmp	r4, r3
 8000d92:	d101      	bne.n	8000d98 <_puts_r+0x5c>
 8000d94:	68ac      	ldr	r4, [r5, #8]
 8000d96:	e7e3      	b.n	8000d60 <_puts_r+0x24>
 8000d98:	4b15      	ldr	r3, [pc, #84]	; (8000df0 <_puts_r+0xb4>)
 8000d9a:	429c      	cmp	r4, r3
 8000d9c:	bf08      	it	eq
 8000d9e:	68ec      	ldreq	r4, [r5, #12]
 8000da0:	e7de      	b.n	8000d60 <_puts_r+0x24>
 8000da2:	4621      	mov	r1, r4
 8000da4:	4628      	mov	r0, r5
 8000da6:	f000 f87f 	bl	8000ea8 <__swsetup_r>
 8000daa:	2800      	cmp	r0, #0
 8000dac:	d0dd      	beq.n	8000d6a <_puts_r+0x2e>
 8000dae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000db2:	bd70      	pop	{r4, r5, r6, pc}
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	da04      	bge.n	8000dc2 <_puts_r+0x86>
 8000db8:	69a2      	ldr	r2, [r4, #24]
 8000dba:	429a      	cmp	r2, r3
 8000dbc:	dc06      	bgt.n	8000dcc <_puts_r+0x90>
 8000dbe:	290a      	cmp	r1, #10
 8000dc0:	d004      	beq.n	8000dcc <_puts_r+0x90>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	1c5a      	adds	r2, r3, #1
 8000dc6:	6022      	str	r2, [r4, #0]
 8000dc8:	7019      	strb	r1, [r3, #0]
 8000dca:	e7cf      	b.n	8000d6c <_puts_r+0x30>
 8000dcc:	4622      	mov	r2, r4
 8000dce:	4628      	mov	r0, r5
 8000dd0:	f000 f818 	bl	8000e04 <__swbuf_r>
 8000dd4:	3001      	adds	r0, #1
 8000dd6:	d1c9      	bne.n	8000d6c <_puts_r+0x30>
 8000dd8:	e7e9      	b.n	8000dae <_puts_r+0x72>
 8000dda:	6823      	ldr	r3, [r4, #0]
 8000ddc:	200a      	movs	r0, #10
 8000dde:	1c5a      	adds	r2, r3, #1
 8000de0:	6022      	str	r2, [r4, #0]
 8000de2:	7018      	strb	r0, [r3, #0]
 8000de4:	e7e5      	b.n	8000db2 <_puts_r+0x76>
 8000de6:	bf00      	nop
 8000de8:	080021e4 	.word	0x080021e4
 8000dec:	08002204 	.word	0x08002204
 8000df0:	080021c4 	.word	0x080021c4

08000df4 <puts>:
 8000df4:	4b02      	ldr	r3, [pc, #8]	; (8000e00 <puts+0xc>)
 8000df6:	4601      	mov	r1, r0
 8000df8:	6818      	ldr	r0, [r3, #0]
 8000dfa:	f7ff bf9f 	b.w	8000d3c <_puts_r>
 8000dfe:	bf00      	nop
 8000e00:	20000000 	.word	0x20000000

08000e04 <__swbuf_r>:
 8000e04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e06:	460e      	mov	r6, r1
 8000e08:	4614      	mov	r4, r2
 8000e0a:	4605      	mov	r5, r0
 8000e0c:	b118      	cbz	r0, 8000e16 <__swbuf_r+0x12>
 8000e0e:	6983      	ldr	r3, [r0, #24]
 8000e10:	b90b      	cbnz	r3, 8000e16 <__swbuf_r+0x12>
 8000e12:	f000 f9a7 	bl	8001164 <__sinit>
 8000e16:	4b21      	ldr	r3, [pc, #132]	; (8000e9c <__swbuf_r+0x98>)
 8000e18:	429c      	cmp	r4, r3
 8000e1a:	d12a      	bne.n	8000e72 <__swbuf_r+0x6e>
 8000e1c:	686c      	ldr	r4, [r5, #4]
 8000e1e:	69a3      	ldr	r3, [r4, #24]
 8000e20:	60a3      	str	r3, [r4, #8]
 8000e22:	89a3      	ldrh	r3, [r4, #12]
 8000e24:	071a      	lsls	r2, r3, #28
 8000e26:	d52e      	bpl.n	8000e86 <__swbuf_r+0x82>
 8000e28:	6923      	ldr	r3, [r4, #16]
 8000e2a:	b363      	cbz	r3, 8000e86 <__swbuf_r+0x82>
 8000e2c:	6923      	ldr	r3, [r4, #16]
 8000e2e:	6820      	ldr	r0, [r4, #0]
 8000e30:	1ac0      	subs	r0, r0, r3
 8000e32:	6963      	ldr	r3, [r4, #20]
 8000e34:	b2f6      	uxtb	r6, r6
 8000e36:	4283      	cmp	r3, r0
 8000e38:	4637      	mov	r7, r6
 8000e3a:	dc04      	bgt.n	8000e46 <__swbuf_r+0x42>
 8000e3c:	4621      	mov	r1, r4
 8000e3e:	4628      	mov	r0, r5
 8000e40:	f000 f926 	bl	8001090 <_fflush_r>
 8000e44:	bb28      	cbnz	r0, 8000e92 <__swbuf_r+0x8e>
 8000e46:	68a3      	ldr	r3, [r4, #8]
 8000e48:	3b01      	subs	r3, #1
 8000e4a:	60a3      	str	r3, [r4, #8]
 8000e4c:	6823      	ldr	r3, [r4, #0]
 8000e4e:	1c5a      	adds	r2, r3, #1
 8000e50:	6022      	str	r2, [r4, #0]
 8000e52:	701e      	strb	r6, [r3, #0]
 8000e54:	6963      	ldr	r3, [r4, #20]
 8000e56:	3001      	adds	r0, #1
 8000e58:	4283      	cmp	r3, r0
 8000e5a:	d004      	beq.n	8000e66 <__swbuf_r+0x62>
 8000e5c:	89a3      	ldrh	r3, [r4, #12]
 8000e5e:	07db      	lsls	r3, r3, #31
 8000e60:	d519      	bpl.n	8000e96 <__swbuf_r+0x92>
 8000e62:	2e0a      	cmp	r6, #10
 8000e64:	d117      	bne.n	8000e96 <__swbuf_r+0x92>
 8000e66:	4621      	mov	r1, r4
 8000e68:	4628      	mov	r0, r5
 8000e6a:	f000 f911 	bl	8001090 <_fflush_r>
 8000e6e:	b190      	cbz	r0, 8000e96 <__swbuf_r+0x92>
 8000e70:	e00f      	b.n	8000e92 <__swbuf_r+0x8e>
 8000e72:	4b0b      	ldr	r3, [pc, #44]	; (8000ea0 <__swbuf_r+0x9c>)
 8000e74:	429c      	cmp	r4, r3
 8000e76:	d101      	bne.n	8000e7c <__swbuf_r+0x78>
 8000e78:	68ac      	ldr	r4, [r5, #8]
 8000e7a:	e7d0      	b.n	8000e1e <__swbuf_r+0x1a>
 8000e7c:	4b09      	ldr	r3, [pc, #36]	; (8000ea4 <__swbuf_r+0xa0>)
 8000e7e:	429c      	cmp	r4, r3
 8000e80:	bf08      	it	eq
 8000e82:	68ec      	ldreq	r4, [r5, #12]
 8000e84:	e7cb      	b.n	8000e1e <__swbuf_r+0x1a>
 8000e86:	4621      	mov	r1, r4
 8000e88:	4628      	mov	r0, r5
 8000e8a:	f000 f80d 	bl	8000ea8 <__swsetup_r>
 8000e8e:	2800      	cmp	r0, #0
 8000e90:	d0cc      	beq.n	8000e2c <__swbuf_r+0x28>
 8000e92:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000e96:	4638      	mov	r0, r7
 8000e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e9a:	bf00      	nop
 8000e9c:	080021e4 	.word	0x080021e4
 8000ea0:	08002204 	.word	0x08002204
 8000ea4:	080021c4 	.word	0x080021c4

08000ea8 <__swsetup_r>:
 8000ea8:	4b32      	ldr	r3, [pc, #200]	; (8000f74 <__swsetup_r+0xcc>)
 8000eaa:	b570      	push	{r4, r5, r6, lr}
 8000eac:	681d      	ldr	r5, [r3, #0]
 8000eae:	4606      	mov	r6, r0
 8000eb0:	460c      	mov	r4, r1
 8000eb2:	b125      	cbz	r5, 8000ebe <__swsetup_r+0x16>
 8000eb4:	69ab      	ldr	r3, [r5, #24]
 8000eb6:	b913      	cbnz	r3, 8000ebe <__swsetup_r+0x16>
 8000eb8:	4628      	mov	r0, r5
 8000eba:	f000 f953 	bl	8001164 <__sinit>
 8000ebe:	4b2e      	ldr	r3, [pc, #184]	; (8000f78 <__swsetup_r+0xd0>)
 8000ec0:	429c      	cmp	r4, r3
 8000ec2:	d10f      	bne.n	8000ee4 <__swsetup_r+0x3c>
 8000ec4:	686c      	ldr	r4, [r5, #4]
 8000ec6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000eca:	b29a      	uxth	r2, r3
 8000ecc:	0715      	lsls	r5, r2, #28
 8000ece:	d42c      	bmi.n	8000f2a <__swsetup_r+0x82>
 8000ed0:	06d0      	lsls	r0, r2, #27
 8000ed2:	d411      	bmi.n	8000ef8 <__swsetup_r+0x50>
 8000ed4:	2209      	movs	r2, #9
 8000ed6:	6032      	str	r2, [r6, #0]
 8000ed8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000edc:	81a3      	strh	r3, [r4, #12]
 8000ede:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ee2:	e03e      	b.n	8000f62 <__swsetup_r+0xba>
 8000ee4:	4b25      	ldr	r3, [pc, #148]	; (8000f7c <__swsetup_r+0xd4>)
 8000ee6:	429c      	cmp	r4, r3
 8000ee8:	d101      	bne.n	8000eee <__swsetup_r+0x46>
 8000eea:	68ac      	ldr	r4, [r5, #8]
 8000eec:	e7eb      	b.n	8000ec6 <__swsetup_r+0x1e>
 8000eee:	4b24      	ldr	r3, [pc, #144]	; (8000f80 <__swsetup_r+0xd8>)
 8000ef0:	429c      	cmp	r4, r3
 8000ef2:	bf08      	it	eq
 8000ef4:	68ec      	ldreq	r4, [r5, #12]
 8000ef6:	e7e6      	b.n	8000ec6 <__swsetup_r+0x1e>
 8000ef8:	0751      	lsls	r1, r2, #29
 8000efa:	d512      	bpl.n	8000f22 <__swsetup_r+0x7a>
 8000efc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000efe:	b141      	cbz	r1, 8000f12 <__swsetup_r+0x6a>
 8000f00:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f04:	4299      	cmp	r1, r3
 8000f06:	d002      	beq.n	8000f0e <__swsetup_r+0x66>
 8000f08:	4630      	mov	r0, r6
 8000f0a:	f000 fa19 	bl	8001340 <_free_r>
 8000f0e:	2300      	movs	r3, #0
 8000f10:	6363      	str	r3, [r4, #52]	; 0x34
 8000f12:	89a3      	ldrh	r3, [r4, #12]
 8000f14:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000f18:	81a3      	strh	r3, [r4, #12]
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	6063      	str	r3, [r4, #4]
 8000f1e:	6923      	ldr	r3, [r4, #16]
 8000f20:	6023      	str	r3, [r4, #0]
 8000f22:	89a3      	ldrh	r3, [r4, #12]
 8000f24:	f043 0308 	orr.w	r3, r3, #8
 8000f28:	81a3      	strh	r3, [r4, #12]
 8000f2a:	6923      	ldr	r3, [r4, #16]
 8000f2c:	b94b      	cbnz	r3, 8000f42 <__swsetup_r+0x9a>
 8000f2e:	89a3      	ldrh	r3, [r4, #12]
 8000f30:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000f34:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000f38:	d003      	beq.n	8000f42 <__swsetup_r+0x9a>
 8000f3a:	4621      	mov	r1, r4
 8000f3c:	4630      	mov	r0, r6
 8000f3e:	f000 f9bf 	bl	80012c0 <__smakebuf_r>
 8000f42:	89a2      	ldrh	r2, [r4, #12]
 8000f44:	f012 0301 	ands.w	r3, r2, #1
 8000f48:	d00c      	beq.n	8000f64 <__swsetup_r+0xbc>
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	60a3      	str	r3, [r4, #8]
 8000f4e:	6963      	ldr	r3, [r4, #20]
 8000f50:	425b      	negs	r3, r3
 8000f52:	61a3      	str	r3, [r4, #24]
 8000f54:	6923      	ldr	r3, [r4, #16]
 8000f56:	b953      	cbnz	r3, 8000f6e <__swsetup_r+0xc6>
 8000f58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f5c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000f60:	d1ba      	bne.n	8000ed8 <__swsetup_r+0x30>
 8000f62:	bd70      	pop	{r4, r5, r6, pc}
 8000f64:	0792      	lsls	r2, r2, #30
 8000f66:	bf58      	it	pl
 8000f68:	6963      	ldrpl	r3, [r4, #20]
 8000f6a:	60a3      	str	r3, [r4, #8]
 8000f6c:	e7f2      	b.n	8000f54 <__swsetup_r+0xac>
 8000f6e:	2000      	movs	r0, #0
 8000f70:	e7f7      	b.n	8000f62 <__swsetup_r+0xba>
 8000f72:	bf00      	nop
 8000f74:	20000000 	.word	0x20000000
 8000f78:	080021e4 	.word	0x080021e4
 8000f7c:	08002204 	.word	0x08002204
 8000f80:	080021c4 	.word	0x080021c4

08000f84 <__sflush_r>:
 8000f84:	898a      	ldrh	r2, [r1, #12]
 8000f86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f8a:	4605      	mov	r5, r0
 8000f8c:	0710      	lsls	r0, r2, #28
 8000f8e:	460c      	mov	r4, r1
 8000f90:	d458      	bmi.n	8001044 <__sflush_r+0xc0>
 8000f92:	684b      	ldr	r3, [r1, #4]
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	dc05      	bgt.n	8000fa4 <__sflush_r+0x20>
 8000f98:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	dc02      	bgt.n	8000fa4 <__sflush_r+0x20>
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fa4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fa6:	2e00      	cmp	r6, #0
 8000fa8:	d0f9      	beq.n	8000f9e <__sflush_r+0x1a>
 8000faa:	2300      	movs	r3, #0
 8000fac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fb0:	682f      	ldr	r7, [r5, #0]
 8000fb2:	6a21      	ldr	r1, [r4, #32]
 8000fb4:	602b      	str	r3, [r5, #0]
 8000fb6:	d032      	beq.n	800101e <__sflush_r+0x9a>
 8000fb8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fba:	89a3      	ldrh	r3, [r4, #12]
 8000fbc:	075a      	lsls	r2, r3, #29
 8000fbe:	d505      	bpl.n	8000fcc <__sflush_r+0x48>
 8000fc0:	6863      	ldr	r3, [r4, #4]
 8000fc2:	1ac0      	subs	r0, r0, r3
 8000fc4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fc6:	b10b      	cbz	r3, 8000fcc <__sflush_r+0x48>
 8000fc8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fca:	1ac0      	subs	r0, r0, r3
 8000fcc:	2300      	movs	r3, #0
 8000fce:	4602      	mov	r2, r0
 8000fd0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fd2:	6a21      	ldr	r1, [r4, #32]
 8000fd4:	4628      	mov	r0, r5
 8000fd6:	47b0      	blx	r6
 8000fd8:	1c43      	adds	r3, r0, #1
 8000fda:	89a3      	ldrh	r3, [r4, #12]
 8000fdc:	d106      	bne.n	8000fec <__sflush_r+0x68>
 8000fde:	6829      	ldr	r1, [r5, #0]
 8000fe0:	291d      	cmp	r1, #29
 8000fe2:	d848      	bhi.n	8001076 <__sflush_r+0xf2>
 8000fe4:	4a29      	ldr	r2, [pc, #164]	; (800108c <__sflush_r+0x108>)
 8000fe6:	40ca      	lsrs	r2, r1
 8000fe8:	07d6      	lsls	r6, r2, #31
 8000fea:	d544      	bpl.n	8001076 <__sflush_r+0xf2>
 8000fec:	2200      	movs	r2, #0
 8000fee:	6062      	str	r2, [r4, #4]
 8000ff0:	04d9      	lsls	r1, r3, #19
 8000ff2:	6922      	ldr	r2, [r4, #16]
 8000ff4:	6022      	str	r2, [r4, #0]
 8000ff6:	d504      	bpl.n	8001002 <__sflush_r+0x7e>
 8000ff8:	1c42      	adds	r2, r0, #1
 8000ffa:	d101      	bne.n	8001000 <__sflush_r+0x7c>
 8000ffc:	682b      	ldr	r3, [r5, #0]
 8000ffe:	b903      	cbnz	r3, 8001002 <__sflush_r+0x7e>
 8001000:	6560      	str	r0, [r4, #84]	; 0x54
 8001002:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001004:	602f      	str	r7, [r5, #0]
 8001006:	2900      	cmp	r1, #0
 8001008:	d0c9      	beq.n	8000f9e <__sflush_r+0x1a>
 800100a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800100e:	4299      	cmp	r1, r3
 8001010:	d002      	beq.n	8001018 <__sflush_r+0x94>
 8001012:	4628      	mov	r0, r5
 8001014:	f000 f994 	bl	8001340 <_free_r>
 8001018:	2000      	movs	r0, #0
 800101a:	6360      	str	r0, [r4, #52]	; 0x34
 800101c:	e7c0      	b.n	8000fa0 <__sflush_r+0x1c>
 800101e:	2301      	movs	r3, #1
 8001020:	4628      	mov	r0, r5
 8001022:	47b0      	blx	r6
 8001024:	1c41      	adds	r1, r0, #1
 8001026:	d1c8      	bne.n	8000fba <__sflush_r+0x36>
 8001028:	682b      	ldr	r3, [r5, #0]
 800102a:	2b00      	cmp	r3, #0
 800102c:	d0c5      	beq.n	8000fba <__sflush_r+0x36>
 800102e:	2b1d      	cmp	r3, #29
 8001030:	d001      	beq.n	8001036 <__sflush_r+0xb2>
 8001032:	2b16      	cmp	r3, #22
 8001034:	d101      	bne.n	800103a <__sflush_r+0xb6>
 8001036:	602f      	str	r7, [r5, #0]
 8001038:	e7b1      	b.n	8000f9e <__sflush_r+0x1a>
 800103a:	89a3      	ldrh	r3, [r4, #12]
 800103c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001040:	81a3      	strh	r3, [r4, #12]
 8001042:	e7ad      	b.n	8000fa0 <__sflush_r+0x1c>
 8001044:	690f      	ldr	r7, [r1, #16]
 8001046:	2f00      	cmp	r7, #0
 8001048:	d0a9      	beq.n	8000f9e <__sflush_r+0x1a>
 800104a:	0793      	lsls	r3, r2, #30
 800104c:	680e      	ldr	r6, [r1, #0]
 800104e:	bf08      	it	eq
 8001050:	694b      	ldreq	r3, [r1, #20]
 8001052:	600f      	str	r7, [r1, #0]
 8001054:	bf18      	it	ne
 8001056:	2300      	movne	r3, #0
 8001058:	eba6 0807 	sub.w	r8, r6, r7
 800105c:	608b      	str	r3, [r1, #8]
 800105e:	f1b8 0f00 	cmp.w	r8, #0
 8001062:	dd9c      	ble.n	8000f9e <__sflush_r+0x1a>
 8001064:	4643      	mov	r3, r8
 8001066:	463a      	mov	r2, r7
 8001068:	6a21      	ldr	r1, [r4, #32]
 800106a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800106c:	4628      	mov	r0, r5
 800106e:	47b0      	blx	r6
 8001070:	2800      	cmp	r0, #0
 8001072:	dc06      	bgt.n	8001082 <__sflush_r+0xfe>
 8001074:	89a3      	ldrh	r3, [r4, #12]
 8001076:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800107a:	81a3      	strh	r3, [r4, #12]
 800107c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001080:	e78e      	b.n	8000fa0 <__sflush_r+0x1c>
 8001082:	4407      	add	r7, r0
 8001084:	eba8 0800 	sub.w	r8, r8, r0
 8001088:	e7e9      	b.n	800105e <__sflush_r+0xda>
 800108a:	bf00      	nop
 800108c:	20400001 	.word	0x20400001

08001090 <_fflush_r>:
 8001090:	b538      	push	{r3, r4, r5, lr}
 8001092:	690b      	ldr	r3, [r1, #16]
 8001094:	4605      	mov	r5, r0
 8001096:	460c      	mov	r4, r1
 8001098:	b1db      	cbz	r3, 80010d2 <_fflush_r+0x42>
 800109a:	b118      	cbz	r0, 80010a4 <_fflush_r+0x14>
 800109c:	6983      	ldr	r3, [r0, #24]
 800109e:	b90b      	cbnz	r3, 80010a4 <_fflush_r+0x14>
 80010a0:	f000 f860 	bl	8001164 <__sinit>
 80010a4:	4b0c      	ldr	r3, [pc, #48]	; (80010d8 <_fflush_r+0x48>)
 80010a6:	429c      	cmp	r4, r3
 80010a8:	d109      	bne.n	80010be <_fflush_r+0x2e>
 80010aa:	686c      	ldr	r4, [r5, #4]
 80010ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b0:	b17b      	cbz	r3, 80010d2 <_fflush_r+0x42>
 80010b2:	4621      	mov	r1, r4
 80010b4:	4628      	mov	r0, r5
 80010b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010ba:	f7ff bf63 	b.w	8000f84 <__sflush_r>
 80010be:	4b07      	ldr	r3, [pc, #28]	; (80010dc <_fflush_r+0x4c>)
 80010c0:	429c      	cmp	r4, r3
 80010c2:	d101      	bne.n	80010c8 <_fflush_r+0x38>
 80010c4:	68ac      	ldr	r4, [r5, #8]
 80010c6:	e7f1      	b.n	80010ac <_fflush_r+0x1c>
 80010c8:	4b05      	ldr	r3, [pc, #20]	; (80010e0 <_fflush_r+0x50>)
 80010ca:	429c      	cmp	r4, r3
 80010cc:	bf08      	it	eq
 80010ce:	68ec      	ldreq	r4, [r5, #12]
 80010d0:	e7ec      	b.n	80010ac <_fflush_r+0x1c>
 80010d2:	2000      	movs	r0, #0
 80010d4:	bd38      	pop	{r3, r4, r5, pc}
 80010d6:	bf00      	nop
 80010d8:	080021e4 	.word	0x080021e4
 80010dc:	08002204 	.word	0x08002204
 80010e0:	080021c4 	.word	0x080021c4

080010e4 <std>:
 80010e4:	2300      	movs	r3, #0
 80010e6:	b510      	push	{r4, lr}
 80010e8:	4604      	mov	r4, r0
 80010ea:	e9c0 3300 	strd	r3, r3, [r0]
 80010ee:	6083      	str	r3, [r0, #8]
 80010f0:	8181      	strh	r1, [r0, #12]
 80010f2:	6643      	str	r3, [r0, #100]	; 0x64
 80010f4:	81c2      	strh	r2, [r0, #14]
 80010f6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80010fa:	6183      	str	r3, [r0, #24]
 80010fc:	4619      	mov	r1, r3
 80010fe:	2208      	movs	r2, #8
 8001100:	305c      	adds	r0, #92	; 0x5c
 8001102:	f7ff fdfb 	bl	8000cfc <memset>
 8001106:	4b05      	ldr	r3, [pc, #20]	; (800111c <std+0x38>)
 8001108:	6263      	str	r3, [r4, #36]	; 0x24
 800110a:	4b05      	ldr	r3, [pc, #20]	; (8001120 <std+0x3c>)
 800110c:	62a3      	str	r3, [r4, #40]	; 0x28
 800110e:	4b05      	ldr	r3, [pc, #20]	; (8001124 <std+0x40>)
 8001110:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001112:	4b05      	ldr	r3, [pc, #20]	; (8001128 <std+0x44>)
 8001114:	6224      	str	r4, [r4, #32]
 8001116:	6323      	str	r3, [r4, #48]	; 0x30
 8001118:	bd10      	pop	{r4, pc}
 800111a:	bf00      	nop
 800111c:	08001a41 	.word	0x08001a41
 8001120:	08001a63 	.word	0x08001a63
 8001124:	08001a9b 	.word	0x08001a9b
 8001128:	08001abf 	.word	0x08001abf

0800112c <_cleanup_r>:
 800112c:	4901      	ldr	r1, [pc, #4]	; (8001134 <_cleanup_r+0x8>)
 800112e:	f000 b885 	b.w	800123c <_fwalk_reent>
 8001132:	bf00      	nop
 8001134:	08001091 	.word	0x08001091

08001138 <__sfmoreglue>:
 8001138:	b570      	push	{r4, r5, r6, lr}
 800113a:	1e4a      	subs	r2, r1, #1
 800113c:	2568      	movs	r5, #104	; 0x68
 800113e:	4355      	muls	r5, r2
 8001140:	460e      	mov	r6, r1
 8001142:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8001146:	f000 f949 	bl	80013dc <_malloc_r>
 800114a:	4604      	mov	r4, r0
 800114c:	b140      	cbz	r0, 8001160 <__sfmoreglue+0x28>
 800114e:	2100      	movs	r1, #0
 8001150:	e9c0 1600 	strd	r1, r6, [r0]
 8001154:	300c      	adds	r0, #12
 8001156:	60a0      	str	r0, [r4, #8]
 8001158:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800115c:	f7ff fdce 	bl	8000cfc <memset>
 8001160:	4620      	mov	r0, r4
 8001162:	bd70      	pop	{r4, r5, r6, pc}

08001164 <__sinit>:
 8001164:	6983      	ldr	r3, [r0, #24]
 8001166:	b510      	push	{r4, lr}
 8001168:	4604      	mov	r4, r0
 800116a:	bb33      	cbnz	r3, 80011ba <__sinit+0x56>
 800116c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8001170:	6503      	str	r3, [r0, #80]	; 0x50
 8001172:	4b12      	ldr	r3, [pc, #72]	; (80011bc <__sinit+0x58>)
 8001174:	4a12      	ldr	r2, [pc, #72]	; (80011c0 <__sinit+0x5c>)
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	6282      	str	r2, [r0, #40]	; 0x28
 800117a:	4298      	cmp	r0, r3
 800117c:	bf04      	itt	eq
 800117e:	2301      	moveq	r3, #1
 8001180:	6183      	streq	r3, [r0, #24]
 8001182:	f000 f81f 	bl	80011c4 <__sfp>
 8001186:	6060      	str	r0, [r4, #4]
 8001188:	4620      	mov	r0, r4
 800118a:	f000 f81b 	bl	80011c4 <__sfp>
 800118e:	60a0      	str	r0, [r4, #8]
 8001190:	4620      	mov	r0, r4
 8001192:	f000 f817 	bl	80011c4 <__sfp>
 8001196:	2200      	movs	r2, #0
 8001198:	60e0      	str	r0, [r4, #12]
 800119a:	2104      	movs	r1, #4
 800119c:	6860      	ldr	r0, [r4, #4]
 800119e:	f7ff ffa1 	bl	80010e4 <std>
 80011a2:	2201      	movs	r2, #1
 80011a4:	2109      	movs	r1, #9
 80011a6:	68a0      	ldr	r0, [r4, #8]
 80011a8:	f7ff ff9c 	bl	80010e4 <std>
 80011ac:	2202      	movs	r2, #2
 80011ae:	2112      	movs	r1, #18
 80011b0:	68e0      	ldr	r0, [r4, #12]
 80011b2:	f7ff ff97 	bl	80010e4 <std>
 80011b6:	2301      	movs	r3, #1
 80011b8:	61a3      	str	r3, [r4, #24]
 80011ba:	bd10      	pop	{r4, pc}
 80011bc:	080021c0 	.word	0x080021c0
 80011c0:	0800112d 	.word	0x0800112d

080011c4 <__sfp>:
 80011c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011c6:	4b1b      	ldr	r3, [pc, #108]	; (8001234 <__sfp+0x70>)
 80011c8:	681e      	ldr	r6, [r3, #0]
 80011ca:	69b3      	ldr	r3, [r6, #24]
 80011cc:	4607      	mov	r7, r0
 80011ce:	b913      	cbnz	r3, 80011d6 <__sfp+0x12>
 80011d0:	4630      	mov	r0, r6
 80011d2:	f7ff ffc7 	bl	8001164 <__sinit>
 80011d6:	3648      	adds	r6, #72	; 0x48
 80011d8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80011dc:	3b01      	subs	r3, #1
 80011de:	d503      	bpl.n	80011e8 <__sfp+0x24>
 80011e0:	6833      	ldr	r3, [r6, #0]
 80011e2:	b133      	cbz	r3, 80011f2 <__sfp+0x2e>
 80011e4:	6836      	ldr	r6, [r6, #0]
 80011e6:	e7f7      	b.n	80011d8 <__sfp+0x14>
 80011e8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80011ec:	b16d      	cbz	r5, 800120a <__sfp+0x46>
 80011ee:	3468      	adds	r4, #104	; 0x68
 80011f0:	e7f4      	b.n	80011dc <__sfp+0x18>
 80011f2:	2104      	movs	r1, #4
 80011f4:	4638      	mov	r0, r7
 80011f6:	f7ff ff9f 	bl	8001138 <__sfmoreglue>
 80011fa:	6030      	str	r0, [r6, #0]
 80011fc:	2800      	cmp	r0, #0
 80011fe:	d1f1      	bne.n	80011e4 <__sfp+0x20>
 8001200:	230c      	movs	r3, #12
 8001202:	603b      	str	r3, [r7, #0]
 8001204:	4604      	mov	r4, r0
 8001206:	4620      	mov	r0, r4
 8001208:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800120a:	4b0b      	ldr	r3, [pc, #44]	; (8001238 <__sfp+0x74>)
 800120c:	6665      	str	r5, [r4, #100]	; 0x64
 800120e:	e9c4 5500 	strd	r5, r5, [r4]
 8001212:	60a5      	str	r5, [r4, #8]
 8001214:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8001218:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800121c:	2208      	movs	r2, #8
 800121e:	4629      	mov	r1, r5
 8001220:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001224:	f7ff fd6a 	bl	8000cfc <memset>
 8001228:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800122c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001230:	e7e9      	b.n	8001206 <__sfp+0x42>
 8001232:	bf00      	nop
 8001234:	080021c0 	.word	0x080021c0
 8001238:	ffff0001 	.word	0xffff0001

0800123c <_fwalk_reent>:
 800123c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001240:	4680      	mov	r8, r0
 8001242:	4689      	mov	r9, r1
 8001244:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001248:	2600      	movs	r6, #0
 800124a:	b914      	cbnz	r4, 8001252 <_fwalk_reent+0x16>
 800124c:	4630      	mov	r0, r6
 800124e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001252:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8001256:	3f01      	subs	r7, #1
 8001258:	d501      	bpl.n	800125e <_fwalk_reent+0x22>
 800125a:	6824      	ldr	r4, [r4, #0]
 800125c:	e7f5      	b.n	800124a <_fwalk_reent+0xe>
 800125e:	89ab      	ldrh	r3, [r5, #12]
 8001260:	2b01      	cmp	r3, #1
 8001262:	d907      	bls.n	8001274 <_fwalk_reent+0x38>
 8001264:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001268:	3301      	adds	r3, #1
 800126a:	d003      	beq.n	8001274 <_fwalk_reent+0x38>
 800126c:	4629      	mov	r1, r5
 800126e:	4640      	mov	r0, r8
 8001270:	47c8      	blx	r9
 8001272:	4306      	orrs	r6, r0
 8001274:	3568      	adds	r5, #104	; 0x68
 8001276:	e7ee      	b.n	8001256 <_fwalk_reent+0x1a>

08001278 <__swhatbuf_r>:
 8001278:	b570      	push	{r4, r5, r6, lr}
 800127a:	460e      	mov	r6, r1
 800127c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001280:	2900      	cmp	r1, #0
 8001282:	b096      	sub	sp, #88	; 0x58
 8001284:	4614      	mov	r4, r2
 8001286:	461d      	mov	r5, r3
 8001288:	da07      	bge.n	800129a <__swhatbuf_r+0x22>
 800128a:	2300      	movs	r3, #0
 800128c:	602b      	str	r3, [r5, #0]
 800128e:	89b3      	ldrh	r3, [r6, #12]
 8001290:	061a      	lsls	r2, r3, #24
 8001292:	d410      	bmi.n	80012b6 <__swhatbuf_r+0x3e>
 8001294:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001298:	e00e      	b.n	80012b8 <__swhatbuf_r+0x40>
 800129a:	466a      	mov	r2, sp
 800129c:	f000 fc36 	bl	8001b0c <_fstat_r>
 80012a0:	2800      	cmp	r0, #0
 80012a2:	dbf2      	blt.n	800128a <__swhatbuf_r+0x12>
 80012a4:	9a01      	ldr	r2, [sp, #4]
 80012a6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012aa:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012ae:	425a      	negs	r2, r3
 80012b0:	415a      	adcs	r2, r3
 80012b2:	602a      	str	r2, [r5, #0]
 80012b4:	e7ee      	b.n	8001294 <__swhatbuf_r+0x1c>
 80012b6:	2340      	movs	r3, #64	; 0x40
 80012b8:	2000      	movs	r0, #0
 80012ba:	6023      	str	r3, [r4, #0]
 80012bc:	b016      	add	sp, #88	; 0x58
 80012be:	bd70      	pop	{r4, r5, r6, pc}

080012c0 <__smakebuf_r>:
 80012c0:	898b      	ldrh	r3, [r1, #12]
 80012c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012c4:	079d      	lsls	r5, r3, #30
 80012c6:	4606      	mov	r6, r0
 80012c8:	460c      	mov	r4, r1
 80012ca:	d507      	bpl.n	80012dc <__smakebuf_r+0x1c>
 80012cc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	6123      	str	r3, [r4, #16]
 80012d4:	2301      	movs	r3, #1
 80012d6:	6163      	str	r3, [r4, #20]
 80012d8:	b002      	add	sp, #8
 80012da:	bd70      	pop	{r4, r5, r6, pc}
 80012dc:	ab01      	add	r3, sp, #4
 80012de:	466a      	mov	r2, sp
 80012e0:	f7ff ffca 	bl	8001278 <__swhatbuf_r>
 80012e4:	9900      	ldr	r1, [sp, #0]
 80012e6:	4605      	mov	r5, r0
 80012e8:	4630      	mov	r0, r6
 80012ea:	f000 f877 	bl	80013dc <_malloc_r>
 80012ee:	b948      	cbnz	r0, 8001304 <__smakebuf_r+0x44>
 80012f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012f4:	059a      	lsls	r2, r3, #22
 80012f6:	d4ef      	bmi.n	80012d8 <__smakebuf_r+0x18>
 80012f8:	f023 0303 	bic.w	r3, r3, #3
 80012fc:	f043 0302 	orr.w	r3, r3, #2
 8001300:	81a3      	strh	r3, [r4, #12]
 8001302:	e7e3      	b.n	80012cc <__smakebuf_r+0xc>
 8001304:	4b0d      	ldr	r3, [pc, #52]	; (800133c <__smakebuf_r+0x7c>)
 8001306:	62b3      	str	r3, [r6, #40]	; 0x28
 8001308:	89a3      	ldrh	r3, [r4, #12]
 800130a:	6020      	str	r0, [r4, #0]
 800130c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001310:	81a3      	strh	r3, [r4, #12]
 8001312:	9b00      	ldr	r3, [sp, #0]
 8001314:	6163      	str	r3, [r4, #20]
 8001316:	9b01      	ldr	r3, [sp, #4]
 8001318:	6120      	str	r0, [r4, #16]
 800131a:	b15b      	cbz	r3, 8001334 <__smakebuf_r+0x74>
 800131c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001320:	4630      	mov	r0, r6
 8001322:	f000 fc05 	bl	8001b30 <_isatty_r>
 8001326:	b128      	cbz	r0, 8001334 <__smakebuf_r+0x74>
 8001328:	89a3      	ldrh	r3, [r4, #12]
 800132a:	f023 0303 	bic.w	r3, r3, #3
 800132e:	f043 0301 	orr.w	r3, r3, #1
 8001332:	81a3      	strh	r3, [r4, #12]
 8001334:	89a3      	ldrh	r3, [r4, #12]
 8001336:	431d      	orrs	r5, r3
 8001338:	81a5      	strh	r5, [r4, #12]
 800133a:	e7cd      	b.n	80012d8 <__smakebuf_r+0x18>
 800133c:	0800112d 	.word	0x0800112d

08001340 <_free_r>:
 8001340:	b538      	push	{r3, r4, r5, lr}
 8001342:	4605      	mov	r5, r0
 8001344:	2900      	cmp	r1, #0
 8001346:	d045      	beq.n	80013d4 <_free_r+0x94>
 8001348:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800134c:	1f0c      	subs	r4, r1, #4
 800134e:	2b00      	cmp	r3, #0
 8001350:	bfb8      	it	lt
 8001352:	18e4      	addlt	r4, r4, r3
 8001354:	f000 fc0e 	bl	8001b74 <__malloc_lock>
 8001358:	4a1f      	ldr	r2, [pc, #124]	; (80013d8 <_free_r+0x98>)
 800135a:	6813      	ldr	r3, [r2, #0]
 800135c:	4610      	mov	r0, r2
 800135e:	b933      	cbnz	r3, 800136e <_free_r+0x2e>
 8001360:	6063      	str	r3, [r4, #4]
 8001362:	6014      	str	r4, [r2, #0]
 8001364:	4628      	mov	r0, r5
 8001366:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800136a:	f000 bc04 	b.w	8001b76 <__malloc_unlock>
 800136e:	42a3      	cmp	r3, r4
 8001370:	d90c      	bls.n	800138c <_free_r+0x4c>
 8001372:	6821      	ldr	r1, [r4, #0]
 8001374:	1862      	adds	r2, r4, r1
 8001376:	4293      	cmp	r3, r2
 8001378:	bf04      	itt	eq
 800137a:	681a      	ldreq	r2, [r3, #0]
 800137c:	685b      	ldreq	r3, [r3, #4]
 800137e:	6063      	str	r3, [r4, #4]
 8001380:	bf04      	itt	eq
 8001382:	1852      	addeq	r2, r2, r1
 8001384:	6022      	streq	r2, [r4, #0]
 8001386:	6004      	str	r4, [r0, #0]
 8001388:	e7ec      	b.n	8001364 <_free_r+0x24>
 800138a:	4613      	mov	r3, r2
 800138c:	685a      	ldr	r2, [r3, #4]
 800138e:	b10a      	cbz	r2, 8001394 <_free_r+0x54>
 8001390:	42a2      	cmp	r2, r4
 8001392:	d9fa      	bls.n	800138a <_free_r+0x4a>
 8001394:	6819      	ldr	r1, [r3, #0]
 8001396:	1858      	adds	r0, r3, r1
 8001398:	42a0      	cmp	r0, r4
 800139a:	d10b      	bne.n	80013b4 <_free_r+0x74>
 800139c:	6820      	ldr	r0, [r4, #0]
 800139e:	4401      	add	r1, r0
 80013a0:	1858      	adds	r0, r3, r1
 80013a2:	4282      	cmp	r2, r0
 80013a4:	6019      	str	r1, [r3, #0]
 80013a6:	d1dd      	bne.n	8001364 <_free_r+0x24>
 80013a8:	6810      	ldr	r0, [r2, #0]
 80013aa:	6852      	ldr	r2, [r2, #4]
 80013ac:	605a      	str	r2, [r3, #4]
 80013ae:	4401      	add	r1, r0
 80013b0:	6019      	str	r1, [r3, #0]
 80013b2:	e7d7      	b.n	8001364 <_free_r+0x24>
 80013b4:	d902      	bls.n	80013bc <_free_r+0x7c>
 80013b6:	230c      	movs	r3, #12
 80013b8:	602b      	str	r3, [r5, #0]
 80013ba:	e7d3      	b.n	8001364 <_free_r+0x24>
 80013bc:	6820      	ldr	r0, [r4, #0]
 80013be:	1821      	adds	r1, r4, r0
 80013c0:	428a      	cmp	r2, r1
 80013c2:	bf04      	itt	eq
 80013c4:	6811      	ldreq	r1, [r2, #0]
 80013c6:	6852      	ldreq	r2, [r2, #4]
 80013c8:	6062      	str	r2, [r4, #4]
 80013ca:	bf04      	itt	eq
 80013cc:	1809      	addeq	r1, r1, r0
 80013ce:	6021      	streq	r1, [r4, #0]
 80013d0:	605c      	str	r4, [r3, #4]
 80013d2:	e7c7      	b.n	8001364 <_free_r+0x24>
 80013d4:	bd38      	pop	{r3, r4, r5, pc}
 80013d6:	bf00      	nop
 80013d8:	2000008c 	.word	0x2000008c

080013dc <_malloc_r>:
 80013dc:	b570      	push	{r4, r5, r6, lr}
 80013de:	1ccd      	adds	r5, r1, #3
 80013e0:	f025 0503 	bic.w	r5, r5, #3
 80013e4:	3508      	adds	r5, #8
 80013e6:	2d0c      	cmp	r5, #12
 80013e8:	bf38      	it	cc
 80013ea:	250c      	movcc	r5, #12
 80013ec:	2d00      	cmp	r5, #0
 80013ee:	4606      	mov	r6, r0
 80013f0:	db01      	blt.n	80013f6 <_malloc_r+0x1a>
 80013f2:	42a9      	cmp	r1, r5
 80013f4:	d903      	bls.n	80013fe <_malloc_r+0x22>
 80013f6:	230c      	movs	r3, #12
 80013f8:	6033      	str	r3, [r6, #0]
 80013fa:	2000      	movs	r0, #0
 80013fc:	bd70      	pop	{r4, r5, r6, pc}
 80013fe:	f000 fbb9 	bl	8001b74 <__malloc_lock>
 8001402:	4a21      	ldr	r2, [pc, #132]	; (8001488 <_malloc_r+0xac>)
 8001404:	6814      	ldr	r4, [r2, #0]
 8001406:	4621      	mov	r1, r4
 8001408:	b991      	cbnz	r1, 8001430 <_malloc_r+0x54>
 800140a:	4c20      	ldr	r4, [pc, #128]	; (800148c <_malloc_r+0xb0>)
 800140c:	6823      	ldr	r3, [r4, #0]
 800140e:	b91b      	cbnz	r3, 8001418 <_malloc_r+0x3c>
 8001410:	4630      	mov	r0, r6
 8001412:	f000 fb05 	bl	8001a20 <_sbrk_r>
 8001416:	6020      	str	r0, [r4, #0]
 8001418:	4629      	mov	r1, r5
 800141a:	4630      	mov	r0, r6
 800141c:	f000 fb00 	bl	8001a20 <_sbrk_r>
 8001420:	1c43      	adds	r3, r0, #1
 8001422:	d124      	bne.n	800146e <_malloc_r+0x92>
 8001424:	230c      	movs	r3, #12
 8001426:	6033      	str	r3, [r6, #0]
 8001428:	4630      	mov	r0, r6
 800142a:	f000 fba4 	bl	8001b76 <__malloc_unlock>
 800142e:	e7e4      	b.n	80013fa <_malloc_r+0x1e>
 8001430:	680b      	ldr	r3, [r1, #0]
 8001432:	1b5b      	subs	r3, r3, r5
 8001434:	d418      	bmi.n	8001468 <_malloc_r+0x8c>
 8001436:	2b0b      	cmp	r3, #11
 8001438:	d90f      	bls.n	800145a <_malloc_r+0x7e>
 800143a:	600b      	str	r3, [r1, #0]
 800143c:	50cd      	str	r5, [r1, r3]
 800143e:	18cc      	adds	r4, r1, r3
 8001440:	4630      	mov	r0, r6
 8001442:	f000 fb98 	bl	8001b76 <__malloc_unlock>
 8001446:	f104 000b 	add.w	r0, r4, #11
 800144a:	1d23      	adds	r3, r4, #4
 800144c:	f020 0007 	bic.w	r0, r0, #7
 8001450:	1ac3      	subs	r3, r0, r3
 8001452:	d0d3      	beq.n	80013fc <_malloc_r+0x20>
 8001454:	425a      	negs	r2, r3
 8001456:	50e2      	str	r2, [r4, r3]
 8001458:	e7d0      	b.n	80013fc <_malloc_r+0x20>
 800145a:	428c      	cmp	r4, r1
 800145c:	684b      	ldr	r3, [r1, #4]
 800145e:	bf16      	itet	ne
 8001460:	6063      	strne	r3, [r4, #4]
 8001462:	6013      	streq	r3, [r2, #0]
 8001464:	460c      	movne	r4, r1
 8001466:	e7eb      	b.n	8001440 <_malloc_r+0x64>
 8001468:	460c      	mov	r4, r1
 800146a:	6849      	ldr	r1, [r1, #4]
 800146c:	e7cc      	b.n	8001408 <_malloc_r+0x2c>
 800146e:	1cc4      	adds	r4, r0, #3
 8001470:	f024 0403 	bic.w	r4, r4, #3
 8001474:	42a0      	cmp	r0, r4
 8001476:	d005      	beq.n	8001484 <_malloc_r+0xa8>
 8001478:	1a21      	subs	r1, r4, r0
 800147a:	4630      	mov	r0, r6
 800147c:	f000 fad0 	bl	8001a20 <_sbrk_r>
 8001480:	3001      	adds	r0, #1
 8001482:	d0cf      	beq.n	8001424 <_malloc_r+0x48>
 8001484:	6025      	str	r5, [r4, #0]
 8001486:	e7db      	b.n	8001440 <_malloc_r+0x64>
 8001488:	2000008c 	.word	0x2000008c
 800148c:	20000090 	.word	0x20000090

08001490 <__sfputc_r>:
 8001490:	6893      	ldr	r3, [r2, #8]
 8001492:	3b01      	subs	r3, #1
 8001494:	2b00      	cmp	r3, #0
 8001496:	b410      	push	{r4}
 8001498:	6093      	str	r3, [r2, #8]
 800149a:	da08      	bge.n	80014ae <__sfputc_r+0x1e>
 800149c:	6994      	ldr	r4, [r2, #24]
 800149e:	42a3      	cmp	r3, r4
 80014a0:	db01      	blt.n	80014a6 <__sfputc_r+0x16>
 80014a2:	290a      	cmp	r1, #10
 80014a4:	d103      	bne.n	80014ae <__sfputc_r+0x1e>
 80014a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80014aa:	f7ff bcab 	b.w	8000e04 <__swbuf_r>
 80014ae:	6813      	ldr	r3, [r2, #0]
 80014b0:	1c58      	adds	r0, r3, #1
 80014b2:	6010      	str	r0, [r2, #0]
 80014b4:	7019      	strb	r1, [r3, #0]
 80014b6:	4608      	mov	r0, r1
 80014b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80014bc:	4770      	bx	lr

080014be <__sfputs_r>:
 80014be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014c0:	4606      	mov	r6, r0
 80014c2:	460f      	mov	r7, r1
 80014c4:	4614      	mov	r4, r2
 80014c6:	18d5      	adds	r5, r2, r3
 80014c8:	42ac      	cmp	r4, r5
 80014ca:	d101      	bne.n	80014d0 <__sfputs_r+0x12>
 80014cc:	2000      	movs	r0, #0
 80014ce:	e007      	b.n	80014e0 <__sfputs_r+0x22>
 80014d0:	463a      	mov	r2, r7
 80014d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80014d6:	4630      	mov	r0, r6
 80014d8:	f7ff ffda 	bl	8001490 <__sfputc_r>
 80014dc:	1c43      	adds	r3, r0, #1
 80014de:	d1f3      	bne.n	80014c8 <__sfputs_r+0xa>
 80014e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080014e4 <_vfiprintf_r>:
 80014e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80014e8:	460c      	mov	r4, r1
 80014ea:	b09d      	sub	sp, #116	; 0x74
 80014ec:	4617      	mov	r7, r2
 80014ee:	461d      	mov	r5, r3
 80014f0:	4606      	mov	r6, r0
 80014f2:	b118      	cbz	r0, 80014fc <_vfiprintf_r+0x18>
 80014f4:	6983      	ldr	r3, [r0, #24]
 80014f6:	b90b      	cbnz	r3, 80014fc <_vfiprintf_r+0x18>
 80014f8:	f7ff fe34 	bl	8001164 <__sinit>
 80014fc:	4b7c      	ldr	r3, [pc, #496]	; (80016f0 <_vfiprintf_r+0x20c>)
 80014fe:	429c      	cmp	r4, r3
 8001500:	d158      	bne.n	80015b4 <_vfiprintf_r+0xd0>
 8001502:	6874      	ldr	r4, [r6, #4]
 8001504:	89a3      	ldrh	r3, [r4, #12]
 8001506:	0718      	lsls	r0, r3, #28
 8001508:	d55e      	bpl.n	80015c8 <_vfiprintf_r+0xe4>
 800150a:	6923      	ldr	r3, [r4, #16]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d05b      	beq.n	80015c8 <_vfiprintf_r+0xe4>
 8001510:	2300      	movs	r3, #0
 8001512:	9309      	str	r3, [sp, #36]	; 0x24
 8001514:	2320      	movs	r3, #32
 8001516:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800151a:	2330      	movs	r3, #48	; 0x30
 800151c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001520:	9503      	str	r5, [sp, #12]
 8001522:	f04f 0b01 	mov.w	fp, #1
 8001526:	46b8      	mov	r8, r7
 8001528:	4645      	mov	r5, r8
 800152a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800152e:	b10b      	cbz	r3, 8001534 <_vfiprintf_r+0x50>
 8001530:	2b25      	cmp	r3, #37	; 0x25
 8001532:	d154      	bne.n	80015de <_vfiprintf_r+0xfa>
 8001534:	ebb8 0a07 	subs.w	sl, r8, r7
 8001538:	d00b      	beq.n	8001552 <_vfiprintf_r+0x6e>
 800153a:	4653      	mov	r3, sl
 800153c:	463a      	mov	r2, r7
 800153e:	4621      	mov	r1, r4
 8001540:	4630      	mov	r0, r6
 8001542:	f7ff ffbc 	bl	80014be <__sfputs_r>
 8001546:	3001      	adds	r0, #1
 8001548:	f000 80c2 	beq.w	80016d0 <_vfiprintf_r+0x1ec>
 800154c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800154e:	4453      	add	r3, sl
 8001550:	9309      	str	r3, [sp, #36]	; 0x24
 8001552:	f898 3000 	ldrb.w	r3, [r8]
 8001556:	2b00      	cmp	r3, #0
 8001558:	f000 80ba 	beq.w	80016d0 <_vfiprintf_r+0x1ec>
 800155c:	2300      	movs	r3, #0
 800155e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001562:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001566:	9304      	str	r3, [sp, #16]
 8001568:	9307      	str	r3, [sp, #28]
 800156a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800156e:	931a      	str	r3, [sp, #104]	; 0x68
 8001570:	46a8      	mov	r8, r5
 8001572:	2205      	movs	r2, #5
 8001574:	f818 1b01 	ldrb.w	r1, [r8], #1
 8001578:	485e      	ldr	r0, [pc, #376]	; (80016f4 <_vfiprintf_r+0x210>)
 800157a:	f7fe fe39 	bl	80001f0 <memchr>
 800157e:	9b04      	ldr	r3, [sp, #16]
 8001580:	bb78      	cbnz	r0, 80015e2 <_vfiprintf_r+0xfe>
 8001582:	06d9      	lsls	r1, r3, #27
 8001584:	bf44      	itt	mi
 8001586:	2220      	movmi	r2, #32
 8001588:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800158c:	071a      	lsls	r2, r3, #28
 800158e:	bf44      	itt	mi
 8001590:	222b      	movmi	r2, #43	; 0x2b
 8001592:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001596:	782a      	ldrb	r2, [r5, #0]
 8001598:	2a2a      	cmp	r2, #42	; 0x2a
 800159a:	d02a      	beq.n	80015f2 <_vfiprintf_r+0x10e>
 800159c:	9a07      	ldr	r2, [sp, #28]
 800159e:	46a8      	mov	r8, r5
 80015a0:	2000      	movs	r0, #0
 80015a2:	250a      	movs	r5, #10
 80015a4:	4641      	mov	r1, r8
 80015a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80015aa:	3b30      	subs	r3, #48	; 0x30
 80015ac:	2b09      	cmp	r3, #9
 80015ae:	d969      	bls.n	8001684 <_vfiprintf_r+0x1a0>
 80015b0:	b360      	cbz	r0, 800160c <_vfiprintf_r+0x128>
 80015b2:	e024      	b.n	80015fe <_vfiprintf_r+0x11a>
 80015b4:	4b50      	ldr	r3, [pc, #320]	; (80016f8 <_vfiprintf_r+0x214>)
 80015b6:	429c      	cmp	r4, r3
 80015b8:	d101      	bne.n	80015be <_vfiprintf_r+0xda>
 80015ba:	68b4      	ldr	r4, [r6, #8]
 80015bc:	e7a2      	b.n	8001504 <_vfiprintf_r+0x20>
 80015be:	4b4f      	ldr	r3, [pc, #316]	; (80016fc <_vfiprintf_r+0x218>)
 80015c0:	429c      	cmp	r4, r3
 80015c2:	bf08      	it	eq
 80015c4:	68f4      	ldreq	r4, [r6, #12]
 80015c6:	e79d      	b.n	8001504 <_vfiprintf_r+0x20>
 80015c8:	4621      	mov	r1, r4
 80015ca:	4630      	mov	r0, r6
 80015cc:	f7ff fc6c 	bl	8000ea8 <__swsetup_r>
 80015d0:	2800      	cmp	r0, #0
 80015d2:	d09d      	beq.n	8001510 <_vfiprintf_r+0x2c>
 80015d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015d8:	b01d      	add	sp, #116	; 0x74
 80015da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015de:	46a8      	mov	r8, r5
 80015e0:	e7a2      	b.n	8001528 <_vfiprintf_r+0x44>
 80015e2:	4a44      	ldr	r2, [pc, #272]	; (80016f4 <_vfiprintf_r+0x210>)
 80015e4:	1a80      	subs	r0, r0, r2
 80015e6:	fa0b f000 	lsl.w	r0, fp, r0
 80015ea:	4318      	orrs	r0, r3
 80015ec:	9004      	str	r0, [sp, #16]
 80015ee:	4645      	mov	r5, r8
 80015f0:	e7be      	b.n	8001570 <_vfiprintf_r+0x8c>
 80015f2:	9a03      	ldr	r2, [sp, #12]
 80015f4:	1d11      	adds	r1, r2, #4
 80015f6:	6812      	ldr	r2, [r2, #0]
 80015f8:	9103      	str	r1, [sp, #12]
 80015fa:	2a00      	cmp	r2, #0
 80015fc:	db01      	blt.n	8001602 <_vfiprintf_r+0x11e>
 80015fe:	9207      	str	r2, [sp, #28]
 8001600:	e004      	b.n	800160c <_vfiprintf_r+0x128>
 8001602:	4252      	negs	r2, r2
 8001604:	f043 0302 	orr.w	r3, r3, #2
 8001608:	9207      	str	r2, [sp, #28]
 800160a:	9304      	str	r3, [sp, #16]
 800160c:	f898 3000 	ldrb.w	r3, [r8]
 8001610:	2b2e      	cmp	r3, #46	; 0x2e
 8001612:	d10e      	bne.n	8001632 <_vfiprintf_r+0x14e>
 8001614:	f898 3001 	ldrb.w	r3, [r8, #1]
 8001618:	2b2a      	cmp	r3, #42	; 0x2a
 800161a:	d138      	bne.n	800168e <_vfiprintf_r+0x1aa>
 800161c:	9b03      	ldr	r3, [sp, #12]
 800161e:	1d1a      	adds	r2, r3, #4
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	9203      	str	r2, [sp, #12]
 8001624:	2b00      	cmp	r3, #0
 8001626:	bfb8      	it	lt
 8001628:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800162c:	f108 0802 	add.w	r8, r8, #2
 8001630:	9305      	str	r3, [sp, #20]
 8001632:	4d33      	ldr	r5, [pc, #204]	; (8001700 <_vfiprintf_r+0x21c>)
 8001634:	f898 1000 	ldrb.w	r1, [r8]
 8001638:	2203      	movs	r2, #3
 800163a:	4628      	mov	r0, r5
 800163c:	f7fe fdd8 	bl	80001f0 <memchr>
 8001640:	b140      	cbz	r0, 8001654 <_vfiprintf_r+0x170>
 8001642:	2340      	movs	r3, #64	; 0x40
 8001644:	1b40      	subs	r0, r0, r5
 8001646:	fa03 f000 	lsl.w	r0, r3, r0
 800164a:	9b04      	ldr	r3, [sp, #16]
 800164c:	4303      	orrs	r3, r0
 800164e:	f108 0801 	add.w	r8, r8, #1
 8001652:	9304      	str	r3, [sp, #16]
 8001654:	f898 1000 	ldrb.w	r1, [r8]
 8001658:	482a      	ldr	r0, [pc, #168]	; (8001704 <_vfiprintf_r+0x220>)
 800165a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800165e:	2206      	movs	r2, #6
 8001660:	f108 0701 	add.w	r7, r8, #1
 8001664:	f7fe fdc4 	bl	80001f0 <memchr>
 8001668:	2800      	cmp	r0, #0
 800166a:	d037      	beq.n	80016dc <_vfiprintf_r+0x1f8>
 800166c:	4b26      	ldr	r3, [pc, #152]	; (8001708 <_vfiprintf_r+0x224>)
 800166e:	bb1b      	cbnz	r3, 80016b8 <_vfiprintf_r+0x1d4>
 8001670:	9b03      	ldr	r3, [sp, #12]
 8001672:	3307      	adds	r3, #7
 8001674:	f023 0307 	bic.w	r3, r3, #7
 8001678:	3308      	adds	r3, #8
 800167a:	9303      	str	r3, [sp, #12]
 800167c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800167e:	444b      	add	r3, r9
 8001680:	9309      	str	r3, [sp, #36]	; 0x24
 8001682:	e750      	b.n	8001526 <_vfiprintf_r+0x42>
 8001684:	fb05 3202 	mla	r2, r5, r2, r3
 8001688:	2001      	movs	r0, #1
 800168a:	4688      	mov	r8, r1
 800168c:	e78a      	b.n	80015a4 <_vfiprintf_r+0xc0>
 800168e:	2300      	movs	r3, #0
 8001690:	f108 0801 	add.w	r8, r8, #1
 8001694:	9305      	str	r3, [sp, #20]
 8001696:	4619      	mov	r1, r3
 8001698:	250a      	movs	r5, #10
 800169a:	4640      	mov	r0, r8
 800169c:	f810 2b01 	ldrb.w	r2, [r0], #1
 80016a0:	3a30      	subs	r2, #48	; 0x30
 80016a2:	2a09      	cmp	r2, #9
 80016a4:	d903      	bls.n	80016ae <_vfiprintf_r+0x1ca>
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d0c3      	beq.n	8001632 <_vfiprintf_r+0x14e>
 80016aa:	9105      	str	r1, [sp, #20]
 80016ac:	e7c1      	b.n	8001632 <_vfiprintf_r+0x14e>
 80016ae:	fb05 2101 	mla	r1, r5, r1, r2
 80016b2:	2301      	movs	r3, #1
 80016b4:	4680      	mov	r8, r0
 80016b6:	e7f0      	b.n	800169a <_vfiprintf_r+0x1b6>
 80016b8:	ab03      	add	r3, sp, #12
 80016ba:	9300      	str	r3, [sp, #0]
 80016bc:	4622      	mov	r2, r4
 80016be:	4b13      	ldr	r3, [pc, #76]	; (800170c <_vfiprintf_r+0x228>)
 80016c0:	a904      	add	r1, sp, #16
 80016c2:	4630      	mov	r0, r6
 80016c4:	f3af 8000 	nop.w
 80016c8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80016cc:	4681      	mov	r9, r0
 80016ce:	d1d5      	bne.n	800167c <_vfiprintf_r+0x198>
 80016d0:	89a3      	ldrh	r3, [r4, #12]
 80016d2:	065b      	lsls	r3, r3, #25
 80016d4:	f53f af7e 	bmi.w	80015d4 <_vfiprintf_r+0xf0>
 80016d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80016da:	e77d      	b.n	80015d8 <_vfiprintf_r+0xf4>
 80016dc:	ab03      	add	r3, sp, #12
 80016de:	9300      	str	r3, [sp, #0]
 80016e0:	4622      	mov	r2, r4
 80016e2:	4b0a      	ldr	r3, [pc, #40]	; (800170c <_vfiprintf_r+0x228>)
 80016e4:	a904      	add	r1, sp, #16
 80016e6:	4630      	mov	r0, r6
 80016e8:	f000 f888 	bl	80017fc <_printf_i>
 80016ec:	e7ec      	b.n	80016c8 <_vfiprintf_r+0x1e4>
 80016ee:	bf00      	nop
 80016f0:	080021e4 	.word	0x080021e4
 80016f4:	08002224 	.word	0x08002224
 80016f8:	08002204 	.word	0x08002204
 80016fc:	080021c4 	.word	0x080021c4
 8001700:	0800222a 	.word	0x0800222a
 8001704:	0800222e 	.word	0x0800222e
 8001708:	00000000 	.word	0x00000000
 800170c:	080014bf 	.word	0x080014bf

08001710 <_printf_common>:
 8001710:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001714:	4691      	mov	r9, r2
 8001716:	461f      	mov	r7, r3
 8001718:	688a      	ldr	r2, [r1, #8]
 800171a:	690b      	ldr	r3, [r1, #16]
 800171c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001720:	4293      	cmp	r3, r2
 8001722:	bfb8      	it	lt
 8001724:	4613      	movlt	r3, r2
 8001726:	f8c9 3000 	str.w	r3, [r9]
 800172a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800172e:	4606      	mov	r6, r0
 8001730:	460c      	mov	r4, r1
 8001732:	b112      	cbz	r2, 800173a <_printf_common+0x2a>
 8001734:	3301      	adds	r3, #1
 8001736:	f8c9 3000 	str.w	r3, [r9]
 800173a:	6823      	ldr	r3, [r4, #0]
 800173c:	0699      	lsls	r1, r3, #26
 800173e:	bf42      	ittt	mi
 8001740:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001744:	3302      	addmi	r3, #2
 8001746:	f8c9 3000 	strmi.w	r3, [r9]
 800174a:	6825      	ldr	r5, [r4, #0]
 800174c:	f015 0506 	ands.w	r5, r5, #6
 8001750:	d107      	bne.n	8001762 <_printf_common+0x52>
 8001752:	f104 0a19 	add.w	sl, r4, #25
 8001756:	68e3      	ldr	r3, [r4, #12]
 8001758:	f8d9 2000 	ldr.w	r2, [r9]
 800175c:	1a9b      	subs	r3, r3, r2
 800175e:	42ab      	cmp	r3, r5
 8001760:	dc28      	bgt.n	80017b4 <_printf_common+0xa4>
 8001762:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001766:	6822      	ldr	r2, [r4, #0]
 8001768:	3300      	adds	r3, #0
 800176a:	bf18      	it	ne
 800176c:	2301      	movne	r3, #1
 800176e:	0692      	lsls	r2, r2, #26
 8001770:	d42d      	bmi.n	80017ce <_printf_common+0xbe>
 8001772:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001776:	4639      	mov	r1, r7
 8001778:	4630      	mov	r0, r6
 800177a:	47c0      	blx	r8
 800177c:	3001      	adds	r0, #1
 800177e:	d020      	beq.n	80017c2 <_printf_common+0xb2>
 8001780:	6823      	ldr	r3, [r4, #0]
 8001782:	68e5      	ldr	r5, [r4, #12]
 8001784:	f8d9 2000 	ldr.w	r2, [r9]
 8001788:	f003 0306 	and.w	r3, r3, #6
 800178c:	2b04      	cmp	r3, #4
 800178e:	bf08      	it	eq
 8001790:	1aad      	subeq	r5, r5, r2
 8001792:	68a3      	ldr	r3, [r4, #8]
 8001794:	6922      	ldr	r2, [r4, #16]
 8001796:	bf0c      	ite	eq
 8001798:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800179c:	2500      	movne	r5, #0
 800179e:	4293      	cmp	r3, r2
 80017a0:	bfc4      	itt	gt
 80017a2:	1a9b      	subgt	r3, r3, r2
 80017a4:	18ed      	addgt	r5, r5, r3
 80017a6:	f04f 0900 	mov.w	r9, #0
 80017aa:	341a      	adds	r4, #26
 80017ac:	454d      	cmp	r5, r9
 80017ae:	d11a      	bne.n	80017e6 <_printf_common+0xd6>
 80017b0:	2000      	movs	r0, #0
 80017b2:	e008      	b.n	80017c6 <_printf_common+0xb6>
 80017b4:	2301      	movs	r3, #1
 80017b6:	4652      	mov	r2, sl
 80017b8:	4639      	mov	r1, r7
 80017ba:	4630      	mov	r0, r6
 80017bc:	47c0      	blx	r8
 80017be:	3001      	adds	r0, #1
 80017c0:	d103      	bne.n	80017ca <_printf_common+0xba>
 80017c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80017c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80017ca:	3501      	adds	r5, #1
 80017cc:	e7c3      	b.n	8001756 <_printf_common+0x46>
 80017ce:	18e1      	adds	r1, r4, r3
 80017d0:	1c5a      	adds	r2, r3, #1
 80017d2:	2030      	movs	r0, #48	; 0x30
 80017d4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80017d8:	4422      	add	r2, r4
 80017da:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80017de:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80017e2:	3302      	adds	r3, #2
 80017e4:	e7c5      	b.n	8001772 <_printf_common+0x62>
 80017e6:	2301      	movs	r3, #1
 80017e8:	4622      	mov	r2, r4
 80017ea:	4639      	mov	r1, r7
 80017ec:	4630      	mov	r0, r6
 80017ee:	47c0      	blx	r8
 80017f0:	3001      	adds	r0, #1
 80017f2:	d0e6      	beq.n	80017c2 <_printf_common+0xb2>
 80017f4:	f109 0901 	add.w	r9, r9, #1
 80017f8:	e7d8      	b.n	80017ac <_printf_common+0x9c>
	...

080017fc <_printf_i>:
 80017fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001800:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001804:	460c      	mov	r4, r1
 8001806:	7e09      	ldrb	r1, [r1, #24]
 8001808:	b085      	sub	sp, #20
 800180a:	296e      	cmp	r1, #110	; 0x6e
 800180c:	4617      	mov	r7, r2
 800180e:	4606      	mov	r6, r0
 8001810:	4698      	mov	r8, r3
 8001812:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001814:	f000 80b3 	beq.w	800197e <_printf_i+0x182>
 8001818:	d822      	bhi.n	8001860 <_printf_i+0x64>
 800181a:	2963      	cmp	r1, #99	; 0x63
 800181c:	d036      	beq.n	800188c <_printf_i+0x90>
 800181e:	d80a      	bhi.n	8001836 <_printf_i+0x3a>
 8001820:	2900      	cmp	r1, #0
 8001822:	f000 80b9 	beq.w	8001998 <_printf_i+0x19c>
 8001826:	2958      	cmp	r1, #88	; 0x58
 8001828:	f000 8083 	beq.w	8001932 <_printf_i+0x136>
 800182c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001830:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001834:	e032      	b.n	800189c <_printf_i+0xa0>
 8001836:	2964      	cmp	r1, #100	; 0x64
 8001838:	d001      	beq.n	800183e <_printf_i+0x42>
 800183a:	2969      	cmp	r1, #105	; 0x69
 800183c:	d1f6      	bne.n	800182c <_printf_i+0x30>
 800183e:	6820      	ldr	r0, [r4, #0]
 8001840:	6813      	ldr	r3, [r2, #0]
 8001842:	0605      	lsls	r5, r0, #24
 8001844:	f103 0104 	add.w	r1, r3, #4
 8001848:	d52a      	bpl.n	80018a0 <_printf_i+0xa4>
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	6011      	str	r1, [r2, #0]
 800184e:	2b00      	cmp	r3, #0
 8001850:	da03      	bge.n	800185a <_printf_i+0x5e>
 8001852:	222d      	movs	r2, #45	; 0x2d
 8001854:	425b      	negs	r3, r3
 8001856:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800185a:	486f      	ldr	r0, [pc, #444]	; (8001a18 <_printf_i+0x21c>)
 800185c:	220a      	movs	r2, #10
 800185e:	e039      	b.n	80018d4 <_printf_i+0xd8>
 8001860:	2973      	cmp	r1, #115	; 0x73
 8001862:	f000 809d 	beq.w	80019a0 <_printf_i+0x1a4>
 8001866:	d808      	bhi.n	800187a <_printf_i+0x7e>
 8001868:	296f      	cmp	r1, #111	; 0x6f
 800186a:	d020      	beq.n	80018ae <_printf_i+0xb2>
 800186c:	2970      	cmp	r1, #112	; 0x70
 800186e:	d1dd      	bne.n	800182c <_printf_i+0x30>
 8001870:	6823      	ldr	r3, [r4, #0]
 8001872:	f043 0320 	orr.w	r3, r3, #32
 8001876:	6023      	str	r3, [r4, #0]
 8001878:	e003      	b.n	8001882 <_printf_i+0x86>
 800187a:	2975      	cmp	r1, #117	; 0x75
 800187c:	d017      	beq.n	80018ae <_printf_i+0xb2>
 800187e:	2978      	cmp	r1, #120	; 0x78
 8001880:	d1d4      	bne.n	800182c <_printf_i+0x30>
 8001882:	2378      	movs	r3, #120	; 0x78
 8001884:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001888:	4864      	ldr	r0, [pc, #400]	; (8001a1c <_printf_i+0x220>)
 800188a:	e055      	b.n	8001938 <_printf_i+0x13c>
 800188c:	6813      	ldr	r3, [r2, #0]
 800188e:	1d19      	adds	r1, r3, #4
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	6011      	str	r1, [r2, #0]
 8001894:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001898:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800189c:	2301      	movs	r3, #1
 800189e:	e08c      	b.n	80019ba <_printf_i+0x1be>
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	6011      	str	r1, [r2, #0]
 80018a4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80018a8:	bf18      	it	ne
 80018aa:	b21b      	sxthne	r3, r3
 80018ac:	e7cf      	b.n	800184e <_printf_i+0x52>
 80018ae:	6813      	ldr	r3, [r2, #0]
 80018b0:	6825      	ldr	r5, [r4, #0]
 80018b2:	1d18      	adds	r0, r3, #4
 80018b4:	6010      	str	r0, [r2, #0]
 80018b6:	0628      	lsls	r0, r5, #24
 80018b8:	d501      	bpl.n	80018be <_printf_i+0xc2>
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	e002      	b.n	80018c4 <_printf_i+0xc8>
 80018be:	0668      	lsls	r0, r5, #25
 80018c0:	d5fb      	bpl.n	80018ba <_printf_i+0xbe>
 80018c2:	881b      	ldrh	r3, [r3, #0]
 80018c4:	4854      	ldr	r0, [pc, #336]	; (8001a18 <_printf_i+0x21c>)
 80018c6:	296f      	cmp	r1, #111	; 0x6f
 80018c8:	bf14      	ite	ne
 80018ca:	220a      	movne	r2, #10
 80018cc:	2208      	moveq	r2, #8
 80018ce:	2100      	movs	r1, #0
 80018d0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80018d4:	6865      	ldr	r5, [r4, #4]
 80018d6:	60a5      	str	r5, [r4, #8]
 80018d8:	2d00      	cmp	r5, #0
 80018da:	f2c0 8095 	blt.w	8001a08 <_printf_i+0x20c>
 80018de:	6821      	ldr	r1, [r4, #0]
 80018e0:	f021 0104 	bic.w	r1, r1, #4
 80018e4:	6021      	str	r1, [r4, #0]
 80018e6:	2b00      	cmp	r3, #0
 80018e8:	d13d      	bne.n	8001966 <_printf_i+0x16a>
 80018ea:	2d00      	cmp	r5, #0
 80018ec:	f040 808e 	bne.w	8001a0c <_printf_i+0x210>
 80018f0:	4665      	mov	r5, ip
 80018f2:	2a08      	cmp	r2, #8
 80018f4:	d10b      	bne.n	800190e <_printf_i+0x112>
 80018f6:	6823      	ldr	r3, [r4, #0]
 80018f8:	07db      	lsls	r3, r3, #31
 80018fa:	d508      	bpl.n	800190e <_printf_i+0x112>
 80018fc:	6923      	ldr	r3, [r4, #16]
 80018fe:	6862      	ldr	r2, [r4, #4]
 8001900:	429a      	cmp	r2, r3
 8001902:	bfde      	ittt	le
 8001904:	2330      	movle	r3, #48	; 0x30
 8001906:	f805 3c01 	strble.w	r3, [r5, #-1]
 800190a:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800190e:	ebac 0305 	sub.w	r3, ip, r5
 8001912:	6123      	str	r3, [r4, #16]
 8001914:	f8cd 8000 	str.w	r8, [sp]
 8001918:	463b      	mov	r3, r7
 800191a:	aa03      	add	r2, sp, #12
 800191c:	4621      	mov	r1, r4
 800191e:	4630      	mov	r0, r6
 8001920:	f7ff fef6 	bl	8001710 <_printf_common>
 8001924:	3001      	adds	r0, #1
 8001926:	d14d      	bne.n	80019c4 <_printf_i+0x1c8>
 8001928:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800192c:	b005      	add	sp, #20
 800192e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001932:	4839      	ldr	r0, [pc, #228]	; (8001a18 <_printf_i+0x21c>)
 8001934:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001938:	6813      	ldr	r3, [r2, #0]
 800193a:	6821      	ldr	r1, [r4, #0]
 800193c:	1d1d      	adds	r5, r3, #4
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	6015      	str	r5, [r2, #0]
 8001942:	060a      	lsls	r2, r1, #24
 8001944:	d50b      	bpl.n	800195e <_printf_i+0x162>
 8001946:	07ca      	lsls	r2, r1, #31
 8001948:	bf44      	itt	mi
 800194a:	f041 0120 	orrmi.w	r1, r1, #32
 800194e:	6021      	strmi	r1, [r4, #0]
 8001950:	b91b      	cbnz	r3, 800195a <_printf_i+0x15e>
 8001952:	6822      	ldr	r2, [r4, #0]
 8001954:	f022 0220 	bic.w	r2, r2, #32
 8001958:	6022      	str	r2, [r4, #0]
 800195a:	2210      	movs	r2, #16
 800195c:	e7b7      	b.n	80018ce <_printf_i+0xd2>
 800195e:	064d      	lsls	r5, r1, #25
 8001960:	bf48      	it	mi
 8001962:	b29b      	uxthmi	r3, r3
 8001964:	e7ef      	b.n	8001946 <_printf_i+0x14a>
 8001966:	4665      	mov	r5, ip
 8001968:	fbb3 f1f2 	udiv	r1, r3, r2
 800196c:	fb02 3311 	mls	r3, r2, r1, r3
 8001970:	5cc3      	ldrb	r3, [r0, r3]
 8001972:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001976:	460b      	mov	r3, r1
 8001978:	2900      	cmp	r1, #0
 800197a:	d1f5      	bne.n	8001968 <_printf_i+0x16c>
 800197c:	e7b9      	b.n	80018f2 <_printf_i+0xf6>
 800197e:	6813      	ldr	r3, [r2, #0]
 8001980:	6825      	ldr	r5, [r4, #0]
 8001982:	6961      	ldr	r1, [r4, #20]
 8001984:	1d18      	adds	r0, r3, #4
 8001986:	6010      	str	r0, [r2, #0]
 8001988:	0628      	lsls	r0, r5, #24
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	d501      	bpl.n	8001992 <_printf_i+0x196>
 800198e:	6019      	str	r1, [r3, #0]
 8001990:	e002      	b.n	8001998 <_printf_i+0x19c>
 8001992:	066a      	lsls	r2, r5, #25
 8001994:	d5fb      	bpl.n	800198e <_printf_i+0x192>
 8001996:	8019      	strh	r1, [r3, #0]
 8001998:	2300      	movs	r3, #0
 800199a:	6123      	str	r3, [r4, #16]
 800199c:	4665      	mov	r5, ip
 800199e:	e7b9      	b.n	8001914 <_printf_i+0x118>
 80019a0:	6813      	ldr	r3, [r2, #0]
 80019a2:	1d19      	adds	r1, r3, #4
 80019a4:	6011      	str	r1, [r2, #0]
 80019a6:	681d      	ldr	r5, [r3, #0]
 80019a8:	6862      	ldr	r2, [r4, #4]
 80019aa:	2100      	movs	r1, #0
 80019ac:	4628      	mov	r0, r5
 80019ae:	f7fe fc1f 	bl	80001f0 <memchr>
 80019b2:	b108      	cbz	r0, 80019b8 <_printf_i+0x1bc>
 80019b4:	1b40      	subs	r0, r0, r5
 80019b6:	6060      	str	r0, [r4, #4]
 80019b8:	6863      	ldr	r3, [r4, #4]
 80019ba:	6123      	str	r3, [r4, #16]
 80019bc:	2300      	movs	r3, #0
 80019be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80019c2:	e7a7      	b.n	8001914 <_printf_i+0x118>
 80019c4:	6923      	ldr	r3, [r4, #16]
 80019c6:	462a      	mov	r2, r5
 80019c8:	4639      	mov	r1, r7
 80019ca:	4630      	mov	r0, r6
 80019cc:	47c0      	blx	r8
 80019ce:	3001      	adds	r0, #1
 80019d0:	d0aa      	beq.n	8001928 <_printf_i+0x12c>
 80019d2:	6823      	ldr	r3, [r4, #0]
 80019d4:	079b      	lsls	r3, r3, #30
 80019d6:	d413      	bmi.n	8001a00 <_printf_i+0x204>
 80019d8:	68e0      	ldr	r0, [r4, #12]
 80019da:	9b03      	ldr	r3, [sp, #12]
 80019dc:	4298      	cmp	r0, r3
 80019de:	bfb8      	it	lt
 80019e0:	4618      	movlt	r0, r3
 80019e2:	e7a3      	b.n	800192c <_printf_i+0x130>
 80019e4:	2301      	movs	r3, #1
 80019e6:	464a      	mov	r2, r9
 80019e8:	4639      	mov	r1, r7
 80019ea:	4630      	mov	r0, r6
 80019ec:	47c0      	blx	r8
 80019ee:	3001      	adds	r0, #1
 80019f0:	d09a      	beq.n	8001928 <_printf_i+0x12c>
 80019f2:	3501      	adds	r5, #1
 80019f4:	68e3      	ldr	r3, [r4, #12]
 80019f6:	9a03      	ldr	r2, [sp, #12]
 80019f8:	1a9b      	subs	r3, r3, r2
 80019fa:	42ab      	cmp	r3, r5
 80019fc:	dcf2      	bgt.n	80019e4 <_printf_i+0x1e8>
 80019fe:	e7eb      	b.n	80019d8 <_printf_i+0x1dc>
 8001a00:	2500      	movs	r5, #0
 8001a02:	f104 0919 	add.w	r9, r4, #25
 8001a06:	e7f5      	b.n	80019f4 <_printf_i+0x1f8>
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d1ac      	bne.n	8001966 <_printf_i+0x16a>
 8001a0c:	7803      	ldrb	r3, [r0, #0]
 8001a0e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001a12:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001a16:	e76c      	b.n	80018f2 <_printf_i+0xf6>
 8001a18:	08002235 	.word	0x08002235
 8001a1c:	08002246 	.word	0x08002246

08001a20 <_sbrk_r>:
 8001a20:	b538      	push	{r3, r4, r5, lr}
 8001a22:	4c06      	ldr	r4, [pc, #24]	; (8001a3c <_sbrk_r+0x1c>)
 8001a24:	2300      	movs	r3, #0
 8001a26:	4605      	mov	r5, r0
 8001a28:	4608      	mov	r0, r1
 8001a2a:	6023      	str	r3, [r4, #0]
 8001a2c:	f000 f9bc 	bl	8001da8 <_sbrk>
 8001a30:	1c43      	adds	r3, r0, #1
 8001a32:	d102      	bne.n	8001a3a <_sbrk_r+0x1a>
 8001a34:	6823      	ldr	r3, [r4, #0]
 8001a36:	b103      	cbz	r3, 8001a3a <_sbrk_r+0x1a>
 8001a38:	602b      	str	r3, [r5, #0]
 8001a3a:	bd38      	pop	{r3, r4, r5, pc}
 8001a3c:	20000144 	.word	0x20000144

08001a40 <__sread>:
 8001a40:	b510      	push	{r4, lr}
 8001a42:	460c      	mov	r4, r1
 8001a44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a48:	f000 f896 	bl	8001b78 <_read_r>
 8001a4c:	2800      	cmp	r0, #0
 8001a4e:	bfab      	itete	ge
 8001a50:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001a52:	89a3      	ldrhlt	r3, [r4, #12]
 8001a54:	181b      	addge	r3, r3, r0
 8001a56:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001a5a:	bfac      	ite	ge
 8001a5c:	6563      	strge	r3, [r4, #84]	; 0x54
 8001a5e:	81a3      	strhlt	r3, [r4, #12]
 8001a60:	bd10      	pop	{r4, pc}

08001a62 <__swrite>:
 8001a62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a66:	461f      	mov	r7, r3
 8001a68:	898b      	ldrh	r3, [r1, #12]
 8001a6a:	05db      	lsls	r3, r3, #23
 8001a6c:	4605      	mov	r5, r0
 8001a6e:	460c      	mov	r4, r1
 8001a70:	4616      	mov	r6, r2
 8001a72:	d505      	bpl.n	8001a80 <__swrite+0x1e>
 8001a74:	2302      	movs	r3, #2
 8001a76:	2200      	movs	r2, #0
 8001a78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001a7c:	f000 f868 	bl	8001b50 <_lseek_r>
 8001a80:	89a3      	ldrh	r3, [r4, #12]
 8001a82:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001a86:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001a8a:	81a3      	strh	r3, [r4, #12]
 8001a8c:	4632      	mov	r2, r6
 8001a8e:	463b      	mov	r3, r7
 8001a90:	4628      	mov	r0, r5
 8001a92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001a96:	f000 b817 	b.w	8001ac8 <_write_r>

08001a9a <__sseek>:
 8001a9a:	b510      	push	{r4, lr}
 8001a9c:	460c      	mov	r4, r1
 8001a9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001aa2:	f000 f855 	bl	8001b50 <_lseek_r>
 8001aa6:	1c43      	adds	r3, r0, #1
 8001aa8:	89a3      	ldrh	r3, [r4, #12]
 8001aaa:	bf15      	itete	ne
 8001aac:	6560      	strne	r0, [r4, #84]	; 0x54
 8001aae:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001ab2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001ab6:	81a3      	strheq	r3, [r4, #12]
 8001ab8:	bf18      	it	ne
 8001aba:	81a3      	strhne	r3, [r4, #12]
 8001abc:	bd10      	pop	{r4, pc}

08001abe <__sclose>:
 8001abe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ac2:	f000 b813 	b.w	8001aec <_close_r>
	...

08001ac8 <_write_r>:
 8001ac8:	b538      	push	{r3, r4, r5, lr}
 8001aca:	4c07      	ldr	r4, [pc, #28]	; (8001ae8 <_write_r+0x20>)
 8001acc:	4605      	mov	r5, r0
 8001ace:	4608      	mov	r0, r1
 8001ad0:	4611      	mov	r1, r2
 8001ad2:	2200      	movs	r2, #0
 8001ad4:	6022      	str	r2, [r4, #0]
 8001ad6:	461a      	mov	r2, r3
 8001ad8:	f000 f911 	bl	8001cfe <_write>
 8001adc:	1c43      	adds	r3, r0, #1
 8001ade:	d102      	bne.n	8001ae6 <_write_r+0x1e>
 8001ae0:	6823      	ldr	r3, [r4, #0]
 8001ae2:	b103      	cbz	r3, 8001ae6 <_write_r+0x1e>
 8001ae4:	602b      	str	r3, [r5, #0]
 8001ae6:	bd38      	pop	{r3, r4, r5, pc}
 8001ae8:	20000144 	.word	0x20000144

08001aec <_close_r>:
 8001aec:	b538      	push	{r3, r4, r5, lr}
 8001aee:	4c06      	ldr	r4, [pc, #24]	; (8001b08 <_close_r+0x1c>)
 8001af0:	2300      	movs	r3, #0
 8001af2:	4605      	mov	r5, r0
 8001af4:	4608      	mov	r0, r1
 8001af6:	6023      	str	r3, [r4, #0]
 8001af8:	f000 f930 	bl	8001d5c <_close>
 8001afc:	1c43      	adds	r3, r0, #1
 8001afe:	d102      	bne.n	8001b06 <_close_r+0x1a>
 8001b00:	6823      	ldr	r3, [r4, #0]
 8001b02:	b103      	cbz	r3, 8001b06 <_close_r+0x1a>
 8001b04:	602b      	str	r3, [r5, #0]
 8001b06:	bd38      	pop	{r3, r4, r5, pc}
 8001b08:	20000144 	.word	0x20000144

08001b0c <_fstat_r>:
 8001b0c:	b538      	push	{r3, r4, r5, lr}
 8001b0e:	4c07      	ldr	r4, [pc, #28]	; (8001b2c <_fstat_r+0x20>)
 8001b10:	2300      	movs	r3, #0
 8001b12:	4605      	mov	r5, r0
 8001b14:	4608      	mov	r0, r1
 8001b16:	4611      	mov	r1, r2
 8001b18:	6023      	str	r3, [r4, #0]
 8001b1a:	f000 f98a 	bl	8001e32 <_fstat>
 8001b1e:	1c43      	adds	r3, r0, #1
 8001b20:	d102      	bne.n	8001b28 <_fstat_r+0x1c>
 8001b22:	6823      	ldr	r3, [r4, #0]
 8001b24:	b103      	cbz	r3, 8001b28 <_fstat_r+0x1c>
 8001b26:	602b      	str	r3, [r5, #0]
 8001b28:	bd38      	pop	{r3, r4, r5, pc}
 8001b2a:	bf00      	nop
 8001b2c:	20000144 	.word	0x20000144

08001b30 <_isatty_r>:
 8001b30:	b538      	push	{r3, r4, r5, lr}
 8001b32:	4c06      	ldr	r4, [pc, #24]	; (8001b4c <_isatty_r+0x1c>)
 8001b34:	2300      	movs	r3, #0
 8001b36:	4605      	mov	r5, r0
 8001b38:	4608      	mov	r0, r1
 8001b3a:	6023      	str	r3, [r4, #0]
 8001b3c:	f000 fade 	bl	80020fc <_isatty>
 8001b40:	1c43      	adds	r3, r0, #1
 8001b42:	d102      	bne.n	8001b4a <_isatty_r+0x1a>
 8001b44:	6823      	ldr	r3, [r4, #0]
 8001b46:	b103      	cbz	r3, 8001b4a <_isatty_r+0x1a>
 8001b48:	602b      	str	r3, [r5, #0]
 8001b4a:	bd38      	pop	{r3, r4, r5, pc}
 8001b4c:	20000144 	.word	0x20000144

08001b50 <_lseek_r>:
 8001b50:	b538      	push	{r3, r4, r5, lr}
 8001b52:	4c07      	ldr	r4, [pc, #28]	; (8001b70 <_lseek_r+0x20>)
 8001b54:	4605      	mov	r5, r0
 8001b56:	4608      	mov	r0, r1
 8001b58:	4611      	mov	r1, r2
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	6022      	str	r2, [r4, #0]
 8001b5e:	461a      	mov	r2, r3
 8001b60:	f000 f8bb 	bl	8001cda <_lseek>
 8001b64:	1c43      	adds	r3, r0, #1
 8001b66:	d102      	bne.n	8001b6e <_lseek_r+0x1e>
 8001b68:	6823      	ldr	r3, [r4, #0]
 8001b6a:	b103      	cbz	r3, 8001b6e <_lseek_r+0x1e>
 8001b6c:	602b      	str	r3, [r5, #0]
 8001b6e:	bd38      	pop	{r3, r4, r5, pc}
 8001b70:	20000144 	.word	0x20000144

08001b74 <__malloc_lock>:
 8001b74:	4770      	bx	lr

08001b76 <__malloc_unlock>:
 8001b76:	4770      	bx	lr

08001b78 <_read_r>:
 8001b78:	b538      	push	{r3, r4, r5, lr}
 8001b7a:	4c07      	ldr	r4, [pc, #28]	; (8001b98 <_read_r+0x20>)
 8001b7c:	4605      	mov	r5, r0
 8001b7e:	4608      	mov	r0, r1
 8001b80:	4611      	mov	r1, r2
 8001b82:	2200      	movs	r2, #0
 8001b84:	6022      	str	r2, [r4, #0]
 8001b86:	461a      	mov	r2, r3
 8001b88:	f000 f850 	bl	8001c2c <_read>
 8001b8c:	1c43      	adds	r3, r0, #1
 8001b8e:	d102      	bne.n	8001b96 <_read_r+0x1e>
 8001b90:	6823      	ldr	r3, [r4, #0]
 8001b92:	b103      	cbz	r3, 8001b96 <_read_r+0x1e>
 8001b94:	602b      	str	r3, [r5, #0]
 8001b96:	bd38      	pop	{r3, r4, r5, pc}
 8001b98:	20000144 	.word	0x20000144

08001b9c <findslot>:
 8001b9c:	4b0a      	ldr	r3, [pc, #40]	; (8001bc8 <findslot+0x2c>)
 8001b9e:	b510      	push	{r4, lr}
 8001ba0:	4604      	mov	r4, r0
 8001ba2:	6818      	ldr	r0, [r3, #0]
 8001ba4:	b118      	cbz	r0, 8001bae <findslot+0x12>
 8001ba6:	6983      	ldr	r3, [r0, #24]
 8001ba8:	b90b      	cbnz	r3, 8001bae <findslot+0x12>
 8001baa:	f7ff fadb 	bl	8001164 <__sinit>
 8001bae:	2c13      	cmp	r4, #19
 8001bb0:	d807      	bhi.n	8001bc2 <findslot+0x26>
 8001bb2:	4806      	ldr	r0, [pc, #24]	; (8001bcc <findslot+0x30>)
 8001bb4:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
 8001bb8:	3301      	adds	r3, #1
 8001bba:	d002      	beq.n	8001bc2 <findslot+0x26>
 8001bbc:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001bc0:	bd10      	pop	{r4, pc}
 8001bc2:	2000      	movs	r0, #0
 8001bc4:	e7fc      	b.n	8001bc0 <findslot+0x24>
 8001bc6:	bf00      	nop
 8001bc8:	20000000 	.word	0x20000000
 8001bcc:	200000a4 	.word	0x200000a4

08001bd0 <checkerror>:
 8001bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bd2:	1c43      	adds	r3, r0, #1
 8001bd4:	4605      	mov	r5, r0
 8001bd6:	d109      	bne.n	8001bec <checkerror+0x1c>
 8001bd8:	f000 faac 	bl	8002134 <__errno>
 8001bdc:	2413      	movs	r4, #19
 8001bde:	4606      	mov	r6, r0
 8001be0:	2700      	movs	r7, #0
 8001be2:	4620      	mov	r0, r4
 8001be4:	4639      	mov	r1, r7
 8001be6:	beab      	bkpt	0x00ab
 8001be8:	4604      	mov	r4, r0
 8001bea:	6034      	str	r4, [r6, #0]
 8001bec:	4628      	mov	r0, r5
 8001bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001bf0 <error>:
 8001bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bf2:	4605      	mov	r5, r0
 8001bf4:	f000 fa9e 	bl	8002134 <__errno>
 8001bf8:	2413      	movs	r4, #19
 8001bfa:	4606      	mov	r6, r0
 8001bfc:	2700      	movs	r7, #0
 8001bfe:	4620      	mov	r0, r4
 8001c00:	4639      	mov	r1, r7
 8001c02:	beab      	bkpt	0x00ab
 8001c04:	4604      	mov	r4, r0
 8001c06:	6034      	str	r4, [r6, #0]
 8001c08:	4628      	mov	r0, r5
 8001c0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001c0c <_swiread>:
 8001c0c:	b530      	push	{r4, r5, lr}
 8001c0e:	b085      	sub	sp, #20
 8001c10:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001c14:	9203      	str	r2, [sp, #12]
 8001c16:	2406      	movs	r4, #6
 8001c18:	ad01      	add	r5, sp, #4
 8001c1a:	4620      	mov	r0, r4
 8001c1c:	4629      	mov	r1, r5
 8001c1e:	beab      	bkpt	0x00ab
 8001c20:	4604      	mov	r4, r0
 8001c22:	4620      	mov	r0, r4
 8001c24:	f7ff ffd4 	bl	8001bd0 <checkerror>
 8001c28:	b005      	add	sp, #20
 8001c2a:	bd30      	pop	{r4, r5, pc}

08001c2c <_read>:
 8001c2c:	b570      	push	{r4, r5, r6, lr}
 8001c2e:	460e      	mov	r6, r1
 8001c30:	4615      	mov	r5, r2
 8001c32:	f7ff ffb3 	bl	8001b9c <findslot>
 8001c36:	4604      	mov	r4, r0
 8001c38:	b930      	cbnz	r0, 8001c48 <_read+0x1c>
 8001c3a:	f000 fa7b 	bl	8002134 <__errno>
 8001c3e:	2309      	movs	r3, #9
 8001c40:	6003      	str	r3, [r0, #0]
 8001c42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001c46:	bd70      	pop	{r4, r5, r6, pc}
 8001c48:	462a      	mov	r2, r5
 8001c4a:	4631      	mov	r1, r6
 8001c4c:	6800      	ldr	r0, [r0, #0]
 8001c4e:	f7ff ffdd 	bl	8001c0c <_swiread>
 8001c52:	1c43      	adds	r3, r0, #1
 8001c54:	bf1f      	itttt	ne
 8001c56:	6863      	ldrne	r3, [r4, #4]
 8001c58:	1a28      	subne	r0, r5, r0
 8001c5a:	181b      	addne	r3, r3, r0
 8001c5c:	6063      	strne	r3, [r4, #4]
 8001c5e:	e7f2      	b.n	8001c46 <_read+0x1a>

08001c60 <_swilseek>:
 8001c60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001c62:	460c      	mov	r4, r1
 8001c64:	4616      	mov	r6, r2
 8001c66:	f7ff ff99 	bl	8001b9c <findslot>
 8001c6a:	4605      	mov	r5, r0
 8001c6c:	b940      	cbnz	r0, 8001c80 <_swilseek+0x20>
 8001c6e:	f000 fa61 	bl	8002134 <__errno>
 8001c72:	2309      	movs	r3, #9
 8001c74:	6003      	str	r3, [r0, #0]
 8001c76:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001c7a:	4620      	mov	r0, r4
 8001c7c:	b003      	add	sp, #12
 8001c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c80:	2e02      	cmp	r6, #2
 8001c82:	d903      	bls.n	8001c8c <_swilseek+0x2c>
 8001c84:	f000 fa56 	bl	8002134 <__errno>
 8001c88:	2316      	movs	r3, #22
 8001c8a:	e7f3      	b.n	8001c74 <_swilseek+0x14>
 8001c8c:	2e01      	cmp	r6, #1
 8001c8e:	d112      	bne.n	8001cb6 <_swilseek+0x56>
 8001c90:	6843      	ldr	r3, [r0, #4]
 8001c92:	18e4      	adds	r4, r4, r3
 8001c94:	d4f6      	bmi.n	8001c84 <_swilseek+0x24>
 8001c96:	682b      	ldr	r3, [r5, #0]
 8001c98:	260a      	movs	r6, #10
 8001c9a:	e9cd 3400 	strd	r3, r4, [sp]
 8001c9e:	466f      	mov	r7, sp
 8001ca0:	4630      	mov	r0, r6
 8001ca2:	4639      	mov	r1, r7
 8001ca4:	beab      	bkpt	0x00ab
 8001ca6:	4606      	mov	r6, r0
 8001ca8:	4630      	mov	r0, r6
 8001caa:	f7ff ff91 	bl	8001bd0 <checkerror>
 8001cae:	2800      	cmp	r0, #0
 8001cb0:	dbe1      	blt.n	8001c76 <_swilseek+0x16>
 8001cb2:	606c      	str	r4, [r5, #4]
 8001cb4:	e7e1      	b.n	8001c7a <_swilseek+0x1a>
 8001cb6:	2e02      	cmp	r6, #2
 8001cb8:	d1ed      	bne.n	8001c96 <_swilseek+0x36>
 8001cba:	af02      	add	r7, sp, #8
 8001cbc:	6803      	ldr	r3, [r0, #0]
 8001cbe:	f847 3d08 	str.w	r3, [r7, #-8]!
 8001cc2:	260c      	movs	r6, #12
 8001cc4:	4630      	mov	r0, r6
 8001cc6:	4639      	mov	r1, r7
 8001cc8:	beab      	bkpt	0x00ab
 8001cca:	4606      	mov	r6, r0
 8001ccc:	4630      	mov	r0, r6
 8001cce:	f7ff ff7f 	bl	8001bd0 <checkerror>
 8001cd2:	1c43      	adds	r3, r0, #1
 8001cd4:	d0cf      	beq.n	8001c76 <_swilseek+0x16>
 8001cd6:	4404      	add	r4, r0
 8001cd8:	e7dd      	b.n	8001c96 <_swilseek+0x36>

08001cda <_lseek>:
 8001cda:	f7ff bfc1 	b.w	8001c60 <_swilseek>

08001cde <_swiwrite>:
 8001cde:	b530      	push	{r4, r5, lr}
 8001ce0:	b085      	sub	sp, #20
 8001ce2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001ce6:	9203      	str	r2, [sp, #12]
 8001ce8:	2405      	movs	r4, #5
 8001cea:	ad01      	add	r5, sp, #4
 8001cec:	4620      	mov	r0, r4
 8001cee:	4629      	mov	r1, r5
 8001cf0:	beab      	bkpt	0x00ab
 8001cf2:	4604      	mov	r4, r0
 8001cf4:	4620      	mov	r0, r4
 8001cf6:	f7ff ff6b 	bl	8001bd0 <checkerror>
 8001cfa:	b005      	add	sp, #20
 8001cfc:	bd30      	pop	{r4, r5, pc}

08001cfe <_write>:
 8001cfe:	b570      	push	{r4, r5, r6, lr}
 8001d00:	460e      	mov	r6, r1
 8001d02:	4615      	mov	r5, r2
 8001d04:	f7ff ff4a 	bl	8001b9c <findslot>
 8001d08:	4604      	mov	r4, r0
 8001d0a:	b930      	cbnz	r0, 8001d1a <_write+0x1c>
 8001d0c:	f000 fa12 	bl	8002134 <__errno>
 8001d10:	2309      	movs	r3, #9
 8001d12:	6003      	str	r3, [r0, #0]
 8001d14:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d18:	bd70      	pop	{r4, r5, r6, pc}
 8001d1a:	462a      	mov	r2, r5
 8001d1c:	4631      	mov	r1, r6
 8001d1e:	6800      	ldr	r0, [r0, #0]
 8001d20:	f7ff ffdd 	bl	8001cde <_swiwrite>
 8001d24:	1e02      	subs	r2, r0, #0
 8001d26:	dbf5      	blt.n	8001d14 <_write+0x16>
 8001d28:	6863      	ldr	r3, [r4, #4]
 8001d2a:	1aa8      	subs	r0, r5, r2
 8001d2c:	4403      	add	r3, r0
 8001d2e:	42aa      	cmp	r2, r5
 8001d30:	6063      	str	r3, [r4, #4]
 8001d32:	d1f1      	bne.n	8001d18 <_write+0x1a>
 8001d34:	2000      	movs	r0, #0
 8001d36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d3a:	f7ff bf59 	b.w	8001bf0 <error>

08001d3e <_swiclose>:
 8001d3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001d40:	ad02      	add	r5, sp, #8
 8001d42:	2402      	movs	r4, #2
 8001d44:	f845 0d04 	str.w	r0, [r5, #-4]!
 8001d48:	4620      	mov	r0, r4
 8001d4a:	4629      	mov	r1, r5
 8001d4c:	beab      	bkpt	0x00ab
 8001d4e:	4604      	mov	r4, r0
 8001d50:	4620      	mov	r0, r4
 8001d52:	f7ff ff3d 	bl	8001bd0 <checkerror>
 8001d56:	b003      	add	sp, #12
 8001d58:	bd30      	pop	{r4, r5, pc}
	...

08001d5c <_close>:
 8001d5c:	b538      	push	{r3, r4, r5, lr}
 8001d5e:	4605      	mov	r5, r0
 8001d60:	f7ff ff1c 	bl	8001b9c <findslot>
 8001d64:	4604      	mov	r4, r0
 8001d66:	b930      	cbnz	r0, 8001d76 <_close+0x1a>
 8001d68:	f000 f9e4 	bl	8002134 <__errno>
 8001d6c:	2309      	movs	r3, #9
 8001d6e:	6003      	str	r3, [r0, #0]
 8001d70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d74:	bd38      	pop	{r3, r4, r5, pc}
 8001d76:	3d01      	subs	r5, #1
 8001d78:	2d01      	cmp	r5, #1
 8001d7a:	d809      	bhi.n	8001d90 <_close+0x34>
 8001d7c:	4b09      	ldr	r3, [pc, #36]	; (8001da4 <_close+0x48>)
 8001d7e:	689a      	ldr	r2, [r3, #8]
 8001d80:	691b      	ldr	r3, [r3, #16]
 8001d82:	429a      	cmp	r2, r3
 8001d84:	d104      	bne.n	8001d90 <_close+0x34>
 8001d86:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d8a:	6003      	str	r3, [r0, #0]
 8001d8c:	2000      	movs	r0, #0
 8001d8e:	e7f1      	b.n	8001d74 <_close+0x18>
 8001d90:	6820      	ldr	r0, [r4, #0]
 8001d92:	f7ff ffd4 	bl	8001d3e <_swiclose>
 8001d96:	2800      	cmp	r0, #0
 8001d98:	d1ec      	bne.n	8001d74 <_close+0x18>
 8001d9a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001d9e:	6023      	str	r3, [r4, #0]
 8001da0:	e7e8      	b.n	8001d74 <_close+0x18>
 8001da2:	bf00      	nop
 8001da4:	200000a4 	.word	0x200000a4

08001da8 <_sbrk>:
 8001da8:	4b0d      	ldr	r3, [pc, #52]	; (8001de0 <_sbrk+0x38>)
 8001daa:	6819      	ldr	r1, [r3, #0]
 8001dac:	b510      	push	{r4, lr}
 8001dae:	4602      	mov	r2, r0
 8001db0:	b909      	cbnz	r1, 8001db6 <_sbrk+0xe>
 8001db2:	490c      	ldr	r1, [pc, #48]	; (8001de4 <_sbrk+0x3c>)
 8001db4:	6019      	str	r1, [r3, #0]
 8001db6:	6818      	ldr	r0, [r3, #0]
 8001db8:	4669      	mov	r1, sp
 8001dba:	4402      	add	r2, r0
 8001dbc:	428a      	cmp	r2, r1
 8001dbe:	d806      	bhi.n	8001dce <_sbrk+0x26>
 8001dc0:	4909      	ldr	r1, [pc, #36]	; (8001de8 <_sbrk+0x40>)
 8001dc2:	4c0a      	ldr	r4, [pc, #40]	; (8001dec <_sbrk+0x44>)
 8001dc4:	6809      	ldr	r1, [r1, #0]
 8001dc6:	42a1      	cmp	r1, r4
 8001dc8:	d008      	beq.n	8001ddc <_sbrk+0x34>
 8001dca:	428a      	cmp	r2, r1
 8001dcc:	d906      	bls.n	8001ddc <_sbrk+0x34>
 8001dce:	f000 f9b1 	bl	8002134 <__errno>
 8001dd2:	230c      	movs	r3, #12
 8001dd4:	6003      	str	r3, [r0, #0]
 8001dd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001dda:	bd10      	pop	{r4, pc}
 8001ddc:	601a      	str	r2, [r3, #0]
 8001dde:	e7fc      	b.n	8001dda <_sbrk+0x32>
 8001de0:	20000094 	.word	0x20000094
 8001de4:	20000148 	.word	0x20000148
 8001de8:	20000064 	.word	0x20000064
 8001dec:	cafedead 	.word	0xcafedead

08001df0 <_swistat>:
 8001df0:	b570      	push	{r4, r5, r6, lr}
 8001df2:	460c      	mov	r4, r1
 8001df4:	f7ff fed2 	bl	8001b9c <findslot>
 8001df8:	4606      	mov	r6, r0
 8001dfa:	b930      	cbnz	r0, 8001e0a <_swistat+0x1a>
 8001dfc:	f000 f99a 	bl	8002134 <__errno>
 8001e00:	2309      	movs	r3, #9
 8001e02:	6003      	str	r3, [r0, #0]
 8001e04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e08:	bd70      	pop	{r4, r5, r6, pc}
 8001e0a:	6863      	ldr	r3, [r4, #4]
 8001e0c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001e10:	6063      	str	r3, [r4, #4]
 8001e12:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001e16:	6463      	str	r3, [r4, #68]	; 0x44
 8001e18:	250c      	movs	r5, #12
 8001e1a:	4628      	mov	r0, r5
 8001e1c:	4631      	mov	r1, r6
 8001e1e:	beab      	bkpt	0x00ab
 8001e20:	4605      	mov	r5, r0
 8001e22:	4628      	mov	r0, r5
 8001e24:	f7ff fed4 	bl	8001bd0 <checkerror>
 8001e28:	1c43      	adds	r3, r0, #1
 8001e2a:	bf1c      	itt	ne
 8001e2c:	6120      	strne	r0, [r4, #16]
 8001e2e:	2000      	movne	r0, #0
 8001e30:	e7ea      	b.n	8001e08 <_swistat+0x18>

08001e32 <_fstat>:
 8001e32:	460b      	mov	r3, r1
 8001e34:	b510      	push	{r4, lr}
 8001e36:	2100      	movs	r1, #0
 8001e38:	4604      	mov	r4, r0
 8001e3a:	2258      	movs	r2, #88	; 0x58
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	f7fe ff5d 	bl	8000cfc <memset>
 8001e42:	4601      	mov	r1, r0
 8001e44:	4620      	mov	r0, r4
 8001e46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e4a:	f7ff bfd1 	b.w	8001df0 <_swistat>

08001e4e <_stat>:
 8001e4e:	b538      	push	{r3, r4, r5, lr}
 8001e50:	460d      	mov	r5, r1
 8001e52:	4604      	mov	r4, r0
 8001e54:	2258      	movs	r2, #88	; 0x58
 8001e56:	2100      	movs	r1, #0
 8001e58:	4628      	mov	r0, r5
 8001e5a:	f7fe ff4f 	bl	8000cfc <memset>
 8001e5e:	4620      	mov	r0, r4
 8001e60:	2100      	movs	r1, #0
 8001e62:	f000 f811 	bl	8001e88 <_swiopen>
 8001e66:	1c43      	adds	r3, r0, #1
 8001e68:	4604      	mov	r4, r0
 8001e6a:	d00b      	beq.n	8001e84 <_stat+0x36>
 8001e6c:	686b      	ldr	r3, [r5, #4]
 8001e6e:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001e72:	606b      	str	r3, [r5, #4]
 8001e74:	4629      	mov	r1, r5
 8001e76:	f7ff ffbb 	bl	8001df0 <_swistat>
 8001e7a:	4605      	mov	r5, r0
 8001e7c:	4620      	mov	r0, r4
 8001e7e:	f7ff ff6d 	bl	8001d5c <_close>
 8001e82:	462c      	mov	r4, r5
 8001e84:	4620      	mov	r0, r4
 8001e86:	bd38      	pop	{r3, r4, r5, pc}

08001e88 <_swiopen>:
 8001e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e8c:	4b2b      	ldr	r3, [pc, #172]	; (8001f3c <_swiopen+0xb4>)
 8001e8e:	b096      	sub	sp, #88	; 0x58
 8001e90:	4682      	mov	sl, r0
 8001e92:	460e      	mov	r6, r1
 8001e94:	2500      	movs	r5, #0
 8001e96:	4698      	mov	r8, r3
 8001e98:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001e9c:	1c61      	adds	r1, r4, #1
 8001e9e:	ea4f 07c5 	mov.w	r7, r5, lsl #3
 8001ea2:	d036      	beq.n	8001f12 <_swiopen+0x8a>
 8001ea4:	3501      	adds	r5, #1
 8001ea6:	2d14      	cmp	r5, #20
 8001ea8:	d1f6      	bne.n	8001e98 <_swiopen+0x10>
 8001eaa:	f000 f943 	bl	8002134 <__errno>
 8001eae:	2318      	movs	r3, #24
 8001eb0:	6003      	str	r3, [r0, #0]
 8001eb2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001eb6:	e03c      	b.n	8001f32 <_swiopen+0xaa>
 8001eb8:	f3c6 4400 	ubfx	r4, r6, #16, #1
 8001ebc:	f240 6301 	movw	r3, #1537	; 0x601
 8001ec0:	07b2      	lsls	r2, r6, #30
 8001ec2:	bf48      	it	mi
 8001ec4:	f044 0402 	orrmi.w	r4, r4, #2
 8001ec8:	421e      	tst	r6, r3
 8001eca:	bf18      	it	ne
 8001ecc:	f044 0404 	orrne.w	r4, r4, #4
 8001ed0:	0733      	lsls	r3, r6, #28
 8001ed2:	bf48      	it	mi
 8001ed4:	f024 0404 	bicmi.w	r4, r4, #4
 8001ed8:	4650      	mov	r0, sl
 8001eda:	bf48      	it	mi
 8001edc:	f044 0408 	orrmi.w	r4, r4, #8
 8001ee0:	f8cd a000 	str.w	sl, [sp]
 8001ee4:	f7fe f9d4 	bl	8000290 <strlen>
 8001ee8:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001eec:	2401      	movs	r4, #1
 8001eee:	4620      	mov	r0, r4
 8001ef0:	4649      	mov	r1, r9
 8001ef2:	beab      	bkpt	0x00ab
 8001ef4:	4604      	mov	r4, r0
 8001ef6:	2c00      	cmp	r4, #0
 8001ef8:	db06      	blt.n	8001f08 <_swiopen+0x80>
 8001efa:	4447      	add	r7, r8
 8001efc:	2300      	movs	r3, #0
 8001efe:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8001f02:	607b      	str	r3, [r7, #4]
 8001f04:	462c      	mov	r4, r5
 8001f06:	e014      	b.n	8001f32 <_swiopen+0xaa>
 8001f08:	4620      	mov	r0, r4
 8001f0a:	f7ff fe71 	bl	8001bf0 <error>
 8001f0e:	4604      	mov	r4, r0
 8001f10:	e00f      	b.n	8001f32 <_swiopen+0xaa>
 8001f12:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8001f16:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001f1a:	46e9      	mov	r9, sp
 8001f1c:	d1cc      	bne.n	8001eb8 <_swiopen+0x30>
 8001f1e:	4649      	mov	r1, r9
 8001f20:	4650      	mov	r0, sl
 8001f22:	f7ff ff94 	bl	8001e4e <_stat>
 8001f26:	3001      	adds	r0, #1
 8001f28:	d0c6      	beq.n	8001eb8 <_swiopen+0x30>
 8001f2a:	f000 f903 	bl	8002134 <__errno>
 8001f2e:	2311      	movs	r3, #17
 8001f30:	6003      	str	r3, [r0, #0]
 8001f32:	4620      	mov	r0, r4
 8001f34:	b016      	add	sp, #88	; 0x58
 8001f36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f3a:	bf00      	nop
 8001f3c:	200000a4 	.word	0x200000a4

08001f40 <_get_semihosting_exts>:
 8001f40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001f44:	4607      	mov	r7, r0
 8001f46:	4688      	mov	r8, r1
 8001f48:	4829      	ldr	r0, [pc, #164]	; (8001ff0 <_get_semihosting_exts+0xb0>)
 8001f4a:	2100      	movs	r1, #0
 8001f4c:	4615      	mov	r5, r2
 8001f4e:	f7ff ff9b 	bl	8001e88 <_swiopen>
 8001f52:	462a      	mov	r2, r5
 8001f54:	4604      	mov	r4, r0
 8001f56:	2100      	movs	r1, #0
 8001f58:	4638      	mov	r0, r7
 8001f5a:	f7fe fecf 	bl	8000cfc <memset>
 8001f5e:	1c63      	adds	r3, r4, #1
 8001f60:	d015      	beq.n	8001f8e <_get_semihosting_exts+0x4e>
 8001f62:	4620      	mov	r0, r4
 8001f64:	f7ff fe1a 	bl	8001b9c <findslot>
 8001f68:	260c      	movs	r6, #12
 8001f6a:	4681      	mov	r9, r0
 8001f6c:	4630      	mov	r0, r6
 8001f6e:	4649      	mov	r1, r9
 8001f70:	beab      	bkpt	0x00ab
 8001f72:	4606      	mov	r6, r0
 8001f74:	4630      	mov	r0, r6
 8001f76:	f7ff fe2b 	bl	8001bd0 <checkerror>
 8001f7a:	2803      	cmp	r0, #3
 8001f7c:	dd02      	ble.n	8001f84 <_get_semihosting_exts+0x44>
 8001f7e:	3803      	subs	r0, #3
 8001f80:	42a8      	cmp	r0, r5
 8001f82:	dc08      	bgt.n	8001f96 <_get_semihosting_exts+0x56>
 8001f84:	4620      	mov	r0, r4
 8001f86:	f7ff fee9 	bl	8001d5c <_close>
 8001f8a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001f8e:	4620      	mov	r0, r4
 8001f90:	b003      	add	sp, #12
 8001f92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f96:	2204      	movs	r2, #4
 8001f98:	eb0d 0102 	add.w	r1, sp, r2
 8001f9c:	4620      	mov	r0, r4
 8001f9e:	f7ff fe45 	bl	8001c2c <_read>
 8001fa2:	2803      	cmp	r0, #3
 8001fa4:	ddee      	ble.n	8001f84 <_get_semihosting_exts+0x44>
 8001fa6:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001faa:	2b53      	cmp	r3, #83	; 0x53
 8001fac:	d1ea      	bne.n	8001f84 <_get_semihosting_exts+0x44>
 8001fae:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001fb2:	2b48      	cmp	r3, #72	; 0x48
 8001fb4:	d1e6      	bne.n	8001f84 <_get_semihosting_exts+0x44>
 8001fb6:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001fba:	2b46      	cmp	r3, #70	; 0x46
 8001fbc:	d1e2      	bne.n	8001f84 <_get_semihosting_exts+0x44>
 8001fbe:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001fc2:	2b42      	cmp	r3, #66	; 0x42
 8001fc4:	d1de      	bne.n	8001f84 <_get_semihosting_exts+0x44>
 8001fc6:	2201      	movs	r2, #1
 8001fc8:	4641      	mov	r1, r8
 8001fca:	4620      	mov	r0, r4
 8001fcc:	f7ff fe48 	bl	8001c60 <_swilseek>
 8001fd0:	2800      	cmp	r0, #0
 8001fd2:	dbd7      	blt.n	8001f84 <_get_semihosting_exts+0x44>
 8001fd4:	462a      	mov	r2, r5
 8001fd6:	4639      	mov	r1, r7
 8001fd8:	4620      	mov	r0, r4
 8001fda:	f7ff fe27 	bl	8001c2c <_read>
 8001fde:	4605      	mov	r5, r0
 8001fe0:	4620      	mov	r0, r4
 8001fe2:	f7ff febb 	bl	8001d5c <_close>
 8001fe6:	4628      	mov	r0, r5
 8001fe8:	f7ff fdf2 	bl	8001bd0 <checkerror>
 8001fec:	4604      	mov	r4, r0
 8001fee:	e7ce      	b.n	8001f8e <_get_semihosting_exts+0x4e>
 8001ff0:	08002257 	.word	0x08002257

08001ff4 <initialise_semihosting_exts>:
 8001ff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001ff6:	4d0a      	ldr	r5, [pc, #40]	; (8002020 <initialise_semihosting_exts+0x2c>)
 8001ff8:	4c0a      	ldr	r4, [pc, #40]	; (8002024 <initialise_semihosting_exts+0x30>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	2201      	movs	r2, #1
 8001ffe:	a801      	add	r0, sp, #4
 8002000:	6029      	str	r1, [r5, #0]
 8002002:	6022      	str	r2, [r4, #0]
 8002004:	f7ff ff9c 	bl	8001f40 <_get_semihosting_exts>
 8002008:	2800      	cmp	r0, #0
 800200a:	dd07      	ble.n	800201c <initialise_semihosting_exts+0x28>
 800200c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002010:	f003 0201 	and.w	r2, r3, #1
 8002014:	f003 0302 	and.w	r3, r3, #2
 8002018:	602a      	str	r2, [r5, #0]
 800201a:	6023      	str	r3, [r4, #0]
 800201c:	b003      	add	sp, #12
 800201e:	bd30      	pop	{r4, r5, pc}
 8002020:	20000068 	.word	0x20000068
 8002024:	2000006c 	.word	0x2000006c

08002028 <_has_ext_stdout_stderr>:
 8002028:	b510      	push	{r4, lr}
 800202a:	4c04      	ldr	r4, [pc, #16]	; (800203c <_has_ext_stdout_stderr+0x14>)
 800202c:	6822      	ldr	r2, [r4, #0]
 800202e:	2a00      	cmp	r2, #0
 8002030:	da01      	bge.n	8002036 <_has_ext_stdout_stderr+0xe>
 8002032:	f7ff ffdf 	bl	8001ff4 <initialise_semihosting_exts>
 8002036:	6820      	ldr	r0, [r4, #0]
 8002038:	bd10      	pop	{r4, pc}
 800203a:	bf00      	nop
 800203c:	2000006c 	.word	0x2000006c

08002040 <initialise_monitor_handles>:
 8002040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002044:	b085      	sub	sp, #20
 8002046:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80020f8 <initialise_monitor_handles+0xb8>
 800204a:	f8cd 9004 	str.w	r9, [sp, #4]
 800204e:	2303      	movs	r3, #3
 8002050:	2400      	movs	r4, #0
 8002052:	9303      	str	r3, [sp, #12]
 8002054:	f10d 0804 	add.w	r8, sp, #4
 8002058:	9402      	str	r4, [sp, #8]
 800205a:	2501      	movs	r5, #1
 800205c:	4628      	mov	r0, r5
 800205e:	4641      	mov	r1, r8
 8002060:	beab      	bkpt	0x00ab
 8002062:	4605      	mov	r5, r0
 8002064:	4e20      	ldr	r6, [pc, #128]	; (80020e8 <initialise_monitor_handles+0xa8>)
 8002066:	4a21      	ldr	r2, [pc, #132]	; (80020ec <initialise_monitor_handles+0xac>)
 8002068:	6035      	str	r5, [r6, #0]
 800206a:	4623      	mov	r3, r4
 800206c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002070:	4614      	mov	r4, r2
 8002072:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8002076:	3301      	adds	r3, #1
 8002078:	2b14      	cmp	r3, #20
 800207a:	d1fa      	bne.n	8002072 <initialise_monitor_handles+0x32>
 800207c:	f7ff ffd4 	bl	8002028 <_has_ext_stdout_stderr>
 8002080:	4d1b      	ldr	r5, [pc, #108]	; (80020f0 <initialise_monitor_handles+0xb0>)
 8002082:	b1d0      	cbz	r0, 80020ba <initialise_monitor_handles+0x7a>
 8002084:	f04f 0a03 	mov.w	sl, #3
 8002088:	2304      	movs	r3, #4
 800208a:	f8cd 9004 	str.w	r9, [sp, #4]
 800208e:	2701      	movs	r7, #1
 8002090:	f8cd a00c 	str.w	sl, [sp, #12]
 8002094:	9302      	str	r3, [sp, #8]
 8002096:	4638      	mov	r0, r7
 8002098:	4641      	mov	r1, r8
 800209a:	beab      	bkpt	0x00ab
 800209c:	4683      	mov	fp, r0
 800209e:	4b15      	ldr	r3, [pc, #84]	; (80020f4 <initialise_monitor_handles+0xb4>)
 80020a0:	f8cd 9004 	str.w	r9, [sp, #4]
 80020a4:	f8c3 b000 	str.w	fp, [r3]
 80020a8:	2308      	movs	r3, #8
 80020aa:	f8cd a00c 	str.w	sl, [sp, #12]
 80020ae:	9302      	str	r3, [sp, #8]
 80020b0:	4638      	mov	r0, r7
 80020b2:	4641      	mov	r1, r8
 80020b4:	beab      	bkpt	0x00ab
 80020b6:	4607      	mov	r7, r0
 80020b8:	602f      	str	r7, [r5, #0]
 80020ba:	682b      	ldr	r3, [r5, #0]
 80020bc:	3301      	adds	r3, #1
 80020be:	bf02      	ittt	eq
 80020c0:	4b0c      	ldreq	r3, [pc, #48]	; (80020f4 <initialise_monitor_handles+0xb4>)
 80020c2:	681b      	ldreq	r3, [r3, #0]
 80020c4:	602b      	streq	r3, [r5, #0]
 80020c6:	6833      	ldr	r3, [r6, #0]
 80020c8:	6023      	str	r3, [r4, #0]
 80020ca:	2600      	movs	r6, #0
 80020cc:	6066      	str	r6, [r4, #4]
 80020ce:	f7ff ffab 	bl	8002028 <_has_ext_stdout_stderr>
 80020d2:	b130      	cbz	r0, 80020e2 <initialise_monitor_handles+0xa2>
 80020d4:	4b07      	ldr	r3, [pc, #28]	; (80020f4 <initialise_monitor_handles+0xb4>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	e9c4 3602 	strd	r3, r6, [r4, #8]
 80020dc:	682b      	ldr	r3, [r5, #0]
 80020de:	e9c4 3604 	strd	r3, r6, [r4, #16]
 80020e2:	b005      	add	sp, #20
 80020e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80020e8:	2000009c 	.word	0x2000009c
 80020ec:	200000a4 	.word	0x200000a4
 80020f0:	20000098 	.word	0x20000098
 80020f4:	200000a0 	.word	0x200000a0
 80020f8:	0800226d 	.word	0x0800226d

080020fc <_isatty>:
 80020fc:	b570      	push	{r4, r5, r6, lr}
 80020fe:	f7ff fd4d 	bl	8001b9c <findslot>
 8002102:	2509      	movs	r5, #9
 8002104:	4604      	mov	r4, r0
 8002106:	b920      	cbnz	r0, 8002112 <_isatty+0x16>
 8002108:	f000 f814 	bl	8002134 <__errno>
 800210c:	6005      	str	r5, [r0, #0]
 800210e:	4620      	mov	r0, r4
 8002110:	bd70      	pop	{r4, r5, r6, pc}
 8002112:	4628      	mov	r0, r5
 8002114:	4621      	mov	r1, r4
 8002116:	beab      	bkpt	0x00ab
 8002118:	4604      	mov	r4, r0
 800211a:	2c01      	cmp	r4, #1
 800211c:	d0f7      	beq.n	800210e <_isatty+0x12>
 800211e:	f000 f809 	bl	8002134 <__errno>
 8002122:	2400      	movs	r4, #0
 8002124:	4606      	mov	r6, r0
 8002126:	2513      	movs	r5, #19
 8002128:	4628      	mov	r0, r5
 800212a:	4621      	mov	r1, r4
 800212c:	beab      	bkpt	0x00ab
 800212e:	4605      	mov	r5, r0
 8002130:	6035      	str	r5, [r6, #0]
 8002132:	e7ec      	b.n	800210e <_isatty+0x12>

08002134 <__errno>:
 8002134:	4b01      	ldr	r3, [pc, #4]	; (800213c <__errno+0x8>)
 8002136:	6818      	ldr	r0, [r3, #0]
 8002138:	4770      	bx	lr
 800213a:	bf00      	nop
 800213c:	20000000 	.word	0x20000000

08002140 <_init>:
 8002140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002142:	bf00      	nop
 8002144:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002146:	bc08      	pop	{r3}
 8002148:	469e      	mov	lr, r3
 800214a:	4770      	bx	lr

0800214c <_fini>:
 800214c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800214e:	bf00      	nop
 8002150:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002152:	bc08      	pop	{r3}
 8002154:	469e      	mov	lr, r3
 8002156:	4770      	bx	lr
